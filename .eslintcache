[{"/Users/mngos/Documents/MNgoChat3Web/src/index.js":"1","/Users/mngos/Documents/MNgoChat3Web/src/App.js":"2","/Users/mngos/Documents/MNgoChat3Web/src/Routes.js":"3","/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js":"4","/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js":"5","/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js":"6","/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js":"7","/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js":"8","/Users/mngos/Documents/MNgoChat3Web/src/utils.js":"9","/Users/mngos/Documents/MNgoChat3Web/src/constants.js":"10","/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js":"11","/Users/mngos/Documents/MNgoChat3Web/src/apis.js":"12","/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js":"13","/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js":"14","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBarWrapper.js":"15","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js":"16","/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js":"17","/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js":"18","/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js":"19","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js":"20","/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js":"21","/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js":"22","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js":"23","/Users/mngos/Documents/MNgoChat3Web/src/components/HomePageContent.js":"24","/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js":"25","/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js":"26","/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js":"27","/Users/mngos/Documents/MNgoChat3Web/src/components/ChatPageContent.js":"28","/Users/mngos/Documents/MNgoChat3Web/src/pages/NewChat.js":"29","/Users/mngos/Documents/MNgoChat3Web/src/encryptionConstants.js":"30","/Users/mngos/Documents/MNgoChat3Web/src/dayjs.js":"31","/Users/mngos/Documents/MNgoChat3Web/src/components/ImageViewer.js":"32","/Users/mngos/Documents/MNgoChat3Web/src/components/ImageWithLoader.js":"33","/Users/mngos/Documents/MNgoChat3Web/src/components/OfflineModal.js":"34","/Users/mngos/Documents/MNgoChat3Web/src/components/MessageItem.js":"35"},{"size":176,"mtime":1611987774533,"results":"36","hashOfConfig":"37"},{"size":395,"mtime":1612004842265,"results":"38","hashOfConfig":"37"},{"size":932,"mtime":1612335403903,"results":"39","hashOfConfig":"37"},{"size":127,"mtime":1611987877261,"results":"40","hashOfConfig":"37"},{"size":229,"mtime":1611986021286,"results":"41","hashOfConfig":"37"},{"size":13585,"mtime":1612422795846,"results":"42","hashOfConfig":"37"},{"size":1092,"mtime":1612024932299,"results":"43","hashOfConfig":"37"},{"size":494,"mtime":1612418414557,"results":"44","hashOfConfig":"37"},{"size":4440,"mtime":1612358824542,"results":"45","hashOfConfig":"37"},{"size":1862,"mtime":1612422512878,"results":"46","hashOfConfig":"37"},{"size":8742,"mtime":1612410902402,"results":"47","hashOfConfig":"37"},{"size":1623,"mtime":1612029072017,"results":"48","hashOfConfig":"37"},{"size":575,"mtime":1612001849296,"results":"49","hashOfConfig":"37"},{"size":625,"mtime":1612001939665,"results":"50","hashOfConfig":"37"},{"size":4332,"mtime":1612365544310,"results":"51","hashOfConfig":"37"},{"size":577,"mtime":1612004483020,"results":"52","hashOfConfig":"37"},{"size":3916,"mtime":1612062014815,"results":"53","hashOfConfig":"37"},{"size":1838,"mtime":1612273727483,"results":"54","hashOfConfig":"37"},{"size":1008,"mtime":1612018737347,"results":"55","hashOfConfig":"37"},{"size":447,"mtime":1612008632632,"results":"56","hashOfConfig":"37"},{"size":1333,"mtime":1612021617383,"results":"57","hashOfConfig":"37"},{"size":6120,"mtime":1612066271225,"results":"58","hashOfConfig":"37"},{"size":1737,"mtime":1612273417184,"results":"59","hashOfConfig":"37"},{"size":8409,"mtime":1612427707328,"results":"60","hashOfConfig":"37"},{"size":14498,"mtime":1612429185593,"results":"61","hashOfConfig":"37"},{"size":539,"mtime":1612076140501,"results":"62","hashOfConfig":"37"},{"size":1843,"mtime":1612363632357,"results":"63","hashOfConfig":"37"},{"size":13974,"mtime":1612427606069,"results":"64","hashOfConfig":"37"},{"size":4509,"mtime":1612339281667,"results":"65","hashOfConfig":"37"},{"size":48,"mtime":1612319836974,"results":"66","hashOfConfig":"37"},{"size":96,"mtime":1612322829367,"results":"67","hashOfConfig":"37"},{"size":692,"mtime":1612412047094,"results":"68","hashOfConfig":"37"},{"size":553,"mtime":1612418430992,"results":"69","hashOfConfig":"37"},{"size":400,"mtime":1612365846001,"results":"70","hashOfConfig":"37"},{"size":2477,"mtime":1612426499470,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1v2xoz5",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},"/Users/mngos/Documents/MNgoChat3Web/src/index.js",[],["153","154"],"/Users/mngos/Documents/MNgoChat3Web/src/App.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/Routes.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js",["155"],"import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\n\nimport { checkLoginStatusAction } from \"../redux/actions/index\";\n\nfunction Landing({\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    dispatch,\n}) {\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (isSomeoneLoggedIn) {\n                return <Redirect to=\"/home\" />;\n            } else {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Landing);","/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js",["156"],"/Users/mngos/Documents/MNgoChat3Web/src/utils.js",["157","158"],"import React from 'react';\nimport CryptoJS from \"crypto-js\";\nimport Cookies from \"universal-cookie\";\nimport { animateScroll } from \"react-scroll\";\nimport Slide from '@material-ui/core/Slide';\n\nimport { ENCRYPTION_KEY } from \"./encryptionConstants\";\nimport { COOKIE_EXPIRATION_TIME, LOGGED_USER_TOKEN_COOKIE_NAME } from \"./constants\";\nconst cookies = new Cookies();\n\n//animation for apperance of dialog box\nexport const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n//function to get cookie value\nexport function getCookieValue(cookie_name) {\n    let value = null;\n    try {\n        const cookieValue = cookies.get(cookie_name);\n        if (cookieValue) {\n            value = cookieValue;\n        }\n    } catch {\n        value = null;\n    }\n\n    return value;\n};\n\n//function to set cookie \nexport function makeCookie(key, value) {\n    try {\n        cookies.set(key, value, { path: \"/\", expires: COOKIE_EXPIRATION_TIME, });\n\n        return true;\n    } catch {\n        return false;\n    }\n};\n\nexport function encryptText(text) {\n    try {\n        const encryptedValue = CryptoJS.AES.encrypt(text, ENCRYPTION_KEY).toString();\n        return encryptedValue;\n    } catch {\n        return null;\n    }\n}\n\nexport function decryptText(enryptedValue) {\n    let value = null;\n    try {\n        const decrypted = CryptoJS.AES.decrypt(enryptedValue, ENCRYPTION_KEY);\n        value = CryptoJS.enc.Utf8.stringify(decrypted);\n    } catch {\n        return null;\n    }\n\n    return value;\n}\n\n//function to validate name, contact no and email\nexport function validateUsername(name) {\n    var re = /^[a-zA-Z0-9_]*$/;\n    return re.test(name);\n};\n\nexport function validateName(name) {\n    var re = /^[a-zA-Z0-9 ]*$/;\n    return re.test(name);\n};\n\nexport function validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n};\n\nexport function validateNumber(number) {\n    var re = /^[0-9]*$/;\n    return re.test(number);\n};\n\nexport function getLoggedUserToken() {\n    return getCookieValue(LOGGED_USER_TOKEN_COOKIE_NAME);\n}\n\nexport function getUserTokenOfTheSecondUser(members) {\n    if (!members) {\n        return null\n    }\n    let userTokenOfSecondUser = null;\n\n    const loggedUserToken = getLoggedUserToken();\n    if (Object.keys(members).length === 2) {\n        try {\n            for (const userToken in members) {\n                if (userToken !== loggedUserToken) {\n                    userTokenOfSecondUser = userToken;\n                    break;\n                }\n            }\n        } catch { }\n    }\n\n    return userTokenOfSecondUser;\n}\n\nexport function getUsernameOfTheSecondUser(members) {\n    if (!members) {\n        return null\n    }\n    let usernameOfSecondUser = null;\n\n    const loggedUserToken = getLoggedUserToken();\n    if (Object.keys(members).length === 2) {\n        try {\n            for (const userToken in members) {\n                if (userToken !== loggedUserToken) {\n                    usernameOfSecondUser = members[userToken].name;\n                    break;\n                }\n            }\n        } catch { }\n    }\n\n    return usernameOfSecondUser;\n}\n\nexport function scrollADivToBottom(containerId) {\n    if (!containerId) {\n        return;\n    }\n\n    animateScroll.scrollToBottom({\n        containerId: containerId,\n        duration: 500,\n    });\n}\n\nexport function isEmpty(obj) {\n\n    // null and undefined are \"empty\"\n    if (obj == null) return true;\n\n    // Assume if it has a length property with a non-zero value\n    // that that property is correct.\n    if (obj.length > 0) return false;\n    if (obj.length === 0) return true;\n\n    // If it isn't an object at this point\n    // it is empty, but it can't be anything *but* empty\n    // Is it empty?  Depends on your application.\n    if (typeof obj !== \"object\") return true;\n\n    // Otherwise, does it have any properties of its own?\n    // Note that this doesn't handle\n    // toString and valueOf enumeration bugs in IE < 9\n    for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) return false;\n    }\n\n    return true;\n}\n\n//function to logout\nexport async function logout() {\n    console.log(\"logging out\");\n    await cookies.remove(LOGGED_USER_TOKEN_COOKIE_NAME, { path: \"/\", expires: COOKIE_EXPIRATION_TIME });\n};","/Users/mngos/Documents/MNgoChat3Web/src/constants.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/apis.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBarWrapper.js",["159"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport SnackBar from \"./SnackBar\";\nimport OfflineModal from \"./OfflineModal\";\n\nfunction SnackBarWrapper({\n    snackBarCount,\n    snackBarMsg,\n    snackBarType,\n\n    checkLoginStatusError,\n    loginUserError,\n\n    isUserRegistered,\n    registerUserError,\n\n    verifyPasscodeError,\n    getUserAllChatsError,\n    getAllUsersError,\n    getChatRoomDetailsError,\n    startNewChatRoomError,\n    uploadImageError,\n\n    children,\n}) {\n    const [showOfflineWarning, setShowOffLineWarning] = useState(false);\n    const [snackBarVisible, setSnackBarVisible] = useState(false);\n    const [snackBarMsgState, setSnackBarMsgState] = useState(\"\");\n    const [snackBarTypeState, setSnackBarTypeState] = useState(\"success\")\n\n    useEffect(() => {\n        window.addEventListener('offline', function(e) {\n            console.log('offline');\n            setShowOffLineWarning(true);\n        });\n\n        window.addEventListener('online', function(e) {\n            console.log('online');\n            setShowOffLineWarning(false);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (snackBarMsg) {\n            makeSnackBar(snackBarMsg, snackBarType);\n        }\n    }, [snackBarCount]);\n\n    useEffect(() => {\n        if (checkLoginStatusError) {\n            makeSnackBar(checkLoginStatusError);\n        }\n    }, [checkLoginStatusError]);\n\n    useEffect(() => {\n        if (loginUserError) {\n            makeSnackBar(loginUserError);\n        }\n    }, [loginUserError]);\n\n    useEffect(() => {\n        if (registerUserError) {\n            makeSnackBar(registerUserError);\n        }\n    }, [registerUserError]);\n\n    useEffect(() => {\n        if (isUserRegistered) {\n            makeSnackBar(\"Successfully registered. Please login to continue\", \"success\");\n        }\n    }, [isUserRegistered]);\n\n    useEffect(() => {\n        if (verifyPasscodeError) {\n            makeSnackBar(verifyPasscodeError);\n        }\n    }, [verifyPasscodeError]);\n\n    useEffect(() => {\n        if (getUserAllChatsError) {\n            makeSnackBar(getUserAllChatsError);\n        }\n    }, [getUserAllChatsError]);\n\n    useEffect(() => {\n        if (getUserAllChatsError) {\n            makeSnackBar(getUserAllChatsError);\n        }\n    }, [getUserAllChatsError]);\n\n    useEffect(() => {\n        if (getAllUsersError) {\n            makeSnackBar(getAllUsersError);\n        }\n    }, [getAllUsersError]);\n\n    useEffect(() => {\n        if (getChatRoomDetailsError) {\n            makeSnackBar(getChatRoomDetailsError);\n        }\n    }, [getChatRoomDetailsError]);\n\n    useEffect(() => {\n        if (startNewChatRoomError) {\n            makeSnackBar(startNewChatRoomError);\n        }\n    }, [startNewChatRoomError]);\n\n    useEffect(() => {\n        if (uploadImageError) {\n            makeSnackBar(uploadImageError);\n        }\n    }, [uploadImageError]);\n\n    function makeSnackBar(msg, type) {\n        setSnackBarMsgState(msg);\n        setSnackBarTypeState(type);\n        setSnackBarVisible(true);\n    }\n\n    function handleSnackBarClose() {\n        setSnackBarVisible(false);\n    }\n\n    return (\n        <>\n            {\n                showOfflineWarning ?\n                    <OfflineModal />\n                    : null\n            }\n            {children}\n            <SnackBar\n                open={snackBarVisible}\n                msg={snackBarMsgState}\n                type={snackBarTypeState}\n                handleClose={handleSnackBarClose}\n            />\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        snackBarCount: state.snackBarCount,\n        snackBarMsg: state.snackBarMsg,\n        snackBarType: state.snackBarType,\n\n        checkLoginStatusError: state.checkLoginStatusError,\n        loginUserError: state.loginUserError,\n\n        isUserRegistered: state.isUserRegistered,\n        registerUserError: state.registerUserError,\n\n        verifyPasscodeError: state.verifyPasscodeError,\n        getUserAllChatsError: state.getUserAllChatsError,\n        getAllUsersError: state.getAllUsersError,\n        getChatRoomDetailsError: state.getChatRoomDetailsError,\n        startNewChatRoomError: state.startNewChatRoomError,\n        uploadImageError: state.uploadImageError,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(SnackBarWrapper);","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js",["160"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport logoImg from \"../images/logo.png\";\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport ActionButton from \"../components/ActionButton\";\nimport SignInUpButton from \"../components/SignInUpButton\";\n\nimport { PROJECT_NAME } from \"../constants\";\nimport {\n    showSnackBarAction,\n    checkLoginStatusAction,\n    loginUserAction\n} from \"../redux/actions/index\";\n\nfunction Login({\n    isLoggingUser,\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    history,\n    dispatch,\n}) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function handleLoginBtnClick(e) {\n        e.preventDefault();\n\n        if (isLoggingUser) {\n            return;\n        }\n\n        if (username !== \"\" && password !== \"\") {\n            dispatch(loginUserAction(username, password));\n        } else {\n            dispatch(showSnackBarAction(\"Please fill all the input fields\"));\n        }\n    }\n\n    function handleSignUpBtnClick() {\n        history.push(\"/register\");\n    }\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (isSomeoneLoggedIn) {\n                return <Redirect to=\"/home\" />;\n            } else {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n                    :\n                    <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                        <img\n                            className=\"logoImg\"\n                            alt=\"logoImg\"\n                            src={logoImg}\n                        />\n                        <div className=\"logoTitle\">{PROJECT_NAME}</div>\n\n                        <form className=\"formContainer\" onSubmit={handleLoginBtnClick}>\n                            <input\n                                type=\"text\"\n                                className=\"formInputField\"\n                                placeholder=\"Username\"\n                                autoFocus\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n\n                            <input\n                                type=\"password\"\n                                className=\"formInputField\"\n                                placeholder=\"Password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n\n                            <ActionButton\n                                dark={false}\n                                showLoader={isLoggingUser}\n                                buttonText=\"Login\"\n                                onClick={handleLoginBtnClick}\n                            />\n                        </form>\n\n                        <SignInUpButton\n                            otherText=\"Don't have an account yet?\"\n                            buttonText=\"Signup\"\n                            onClick={handleSignUpBtnClick}\n                        />\n                    </PurpleGradientContainer>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggingUser: state.isLoggingUser,\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Login);","/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js",["161"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport VerifyPasscode from \"../components/VerifyPasscode\";\nimport HomePageContent from \"../components/HomePageContent\";\n\nimport { checkLoginStatusAction } from \"../redux/actions/index\";\n\nfunction Home({\n    isPasscodeVerified,\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    history,\n    dispatch,\n}) {\n    isPasscodeVerified = true;\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (!isSomeoneLoggedIn) {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus || !isSomeoneLoggedIn ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n                    :\n                    <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                        {\n                            isPasscodeVerified ?\n                                <HomePageContent history={history} />\n                                :\n                                <VerifyPasscode />\n                        }\n                    </PurpleGradientContainer>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isPasscodeVerified: state.isPasscodeVerified,\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Home);","/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js",["162","163"],"import React from 'react';\nimport cx from \"classnames\";\n\nimport LoadingAnimation from \"./LoadingAnimation\";\n\nexport default function ActionButton({\n    dark,\n    className,\n    textclassName,\n    showLoader,\n    buttonText = \"Button\",\n    onClick,\n}) {\n    return (\n        <button\n            className={cx(\n                \"actionBtnContainer\",\n                { [\"darkActionBtnContainer\"]: dark },\n                className\n            )}\n            onClick={!showLoader ? onClick : null}\n        >\n            {\n                showLoader ?\n                    <LoadingAnimation dark={!dark} loading={showLoader} />\n                    :\n                    <div\n                        className={cx(\n                            \"actionBtnText\",\n                            { [\"darkActionBtnText\"]: dark },\n                            textclassName\n                        )}\n                    >\n                        {buttonText}\n                    </div>\n            }\n        </button>\n    );\n}","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js",["164"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport logoImg from \"../images/logo.png\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport ActionButton from \"../components/ActionButton\";\n\nimport { PROJECT_NAME } from \"../constants\";\nimport {\n    validateUsername,\n    validateName,\n    validateEmail,\n    validateNumber,\n} from \"../utils\";\nimport { showSnackBarAction, registerUserAction } from \"../redux/actions/index\";\n\nfunction Register({\n    isRegisteringUser,\n    isUserRegistered,\n    dispatch,\n}) {\n    const [username, setUsername] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confPassword, setConfPassword] = useState(\"\");\n    const [passcode, setPasscode] = useState(\"\");\n    const [confPasscode, setConfPasscode] = useState(\"\");\n\n    const [redirectToLoginPage, setRedirectToLoginPage] = useState(false);\n    const [btnClicked, setBtnClicked] = useState(false);\n\n    useEffect(() => {\n        if (isUserRegistered && btnClicked) {\n            setRedirectToLoginPage(true);\n        }\n    }, [isUserRegistered]);\n\n    function handleRegisterBtnClick(e) {\n        e.preventDefault();\n\n        if (isRegisteringUser) {\n            return;\n        }\n\n        if (username !== \"\" && name !== \"\" && email !== \"\" && password !== \"\" && confPassword !== \"\" && passcode !== \"\" && confPasscode !== \"\") {\n            if (!validateUsername(username)) {\n                dispatch(showSnackBarAction(\"Username cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateName(name)) {\n                dispatch(showSnackBarAction(\"Name cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateEmail(email)) {\n                dispatch(showSnackBarAction(\"Invalid Email id format\"));\n                return;\n            }\n            if (password !== confPassword) {\n                dispatch(showSnackBarAction(\"Password do not match\"));\n                return;\n            }\n            if (!validateNumber(passcode)) {\n                dispatch(showSnackBarAction(\"Passcode must be a number\"));\n                return;\n            }\n            if (passcode.length !== 4) {\n                dispatch(showSnackBarAction(\"Passcode must be 4 digits long\"));\n                return;\n            }\n            if (passcode !== confPasscode) {\n                dispatch(showSnackBarAction(\"Passcode do not match\"));\n                return;\n            }\n\n            setBtnClicked(true);\n            dispatch(registerUserAction(username, name, email, password, passcode));\n        } else {\n            dispatch(showSnackBarAction(\"Please fill all the input fields\"));\n        }\n    }\n\n    return (\n        <>\n            {redirectToLoginPage ? <Redirect to=\"/login\" /> : null}\n\n            <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                <img\n                    className=\"logoImg\"\n                    alt=\"logoImg\"\n                    src={logoImg}\n                />\n                <div className=\"logoTitle\">{PROJECT_NAME}</div>\n\n                <form className=\"formContainer\" onSubmit={handleRegisterBtnClick}>\n                    <input\n                        type=\"text\"\n                        className=\"formInputField\"\n                        placeholder=\"Username\"\n                        autoFocus\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n\n                    <input\n                        type=\"text\"\n                        className=\"formInputField\"\n                        placeholder=\"Name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n\n                    <input\n                        type=\"email\"\n                        className=\"formInputField\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Confirm Password\"\n                        value={confPassword}\n                        onChange={(e) => setConfPassword(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Passcode\"\n                        value={passcode}\n                        maxLength={4}\n                        onChange={(e) => setPasscode(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Confirm Passcode\"\n                        value={confPasscode}\n                        maxLength={4}\n                        onChange={(e) => setConfPasscode(e.target.value)}\n                    />\n\n                    <ActionButton\n                        dark={false}\n                        showLoader={isRegisteringUser}\n                        buttonText=\"Register\"\n                        onClick={handleRegisterBtnClick}\n                    />\n                </form>\n            </PurpleGradientContainer>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isRegisteringUser: state.isRegisteringUser,\n        isUserRegistered: state.isUserRegistered,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Register);","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/HomePageContent.js",["165","166","167","168","169","170","171","172","173","174","175"],"/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js",["176","177"],"import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport ChatPageContent from \"../components/ChatPageContent\";\n\nimport {\n    checkLoginStatusAction,\n    getChatRoomDetailsAction\n} from \"../redux/actions/index\";\n\nfunction Chat({\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    isGettingChatRoomDetails,\n    isChatRoomDetailsFetched,\n    match: {\n        params: {\n            chatRoomId,\n        } = {}\n    } = {},\n    dispatch,\n}) {\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    //to get chat room details\n    useEffect(() => {\n        if (isSomeoneLoggedIn) {\n            dispatch(getChatRoomDetailsAction(chatRoomId));\n        }\n    }, [isSomeoneLoggedIn]);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (!isSomeoneLoggedIn) {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus || (isGettingChatRoomDetails || !isChatRoomDetailsFetched) ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus || isGettingChatRoomDetails} />\n                    :\n                    <ChatPageContent dispatch={dispatch} chatRoomId={chatRoomId} />\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n        isGettingChatRoomDetails: state.isGettingChatRoomDetails,\n        isChatRoomDetailsFetched: state.isChatRoomDetailsFetched,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Chat);","/Users/mngos/Documents/MNgoChat3Web/src/components/ChatPageContent.js",["178","179","180","181"],"/Users/mngos/Documents/MNgoChat3Web/src/pages/NewChat.js",["182","183","184"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport userIcon from \"../images/user.png\";\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport ActionButton from \"../components/ActionButton\";\n\nimport { CHAT_ACTION_BOX_HEIGHT } from \"../constants\";\nimport { checkLoginStatusAction, showSnackBarAction } from \"../redux/actions/index\";\nimport { startANewChatRoom } from \"../firebaseQueries\";\n\nfunction NewChat({\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    isStartingANewChatRoom,\n    isANewChatRoomStarted,\n    newChatRoomDetails: {\n        chatRoomId,\n    },\n    userDetails: {\n        username: loggedUsername\n    } = {},\n    match: {\n        params: {\n            selectedUserDetails,\n        } = {}\n    } = {},\n    dispatch,\n}) {\n    const [redirectToChat, setRedirectToChat] = useState(false);\n    const [secondUserDetails, setSecondUserDetails] = useState({});\n\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    useEffect(() => {\n        if (isSomeoneLoggedIn) {\n            try {\n                const selectedUserDetailsObj = JSON.parse(selectedUserDetails);\n                const secondUsername = selectedUserDetailsObj.name;\n                const secondUserToken = selectedUserDetailsObj.token;\n                if (secondUsername && secondUserToken) {\n                    setSecondUserDetails({ secondUserToken, secondUsername });\n                } else {\n                    dispatch(showSnackBarAction(\"Invalid user selected\"));\n                }\n            } catch (e) {\n                dispatch(showSnackBarAction(\"Invalid user selected\"));\n            }\n        }\n    }, [isSomeoneLoggedIn]);\n\n    useEffect(() => {\n        if (isANewChatRoomStarted && chatRoomId) {\n            setRedirectToChat(true);\n        }\n    }, [isANewChatRoomStarted]);\n\n    function handleStartBtnClick() {\n        startANewChatRoom({ dispatch, loggedUsername, ...secondUserDetails });\n    }\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (!isSomeoneLoggedIn) {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToChat ? <Redirect to={\"/chat/\" + chatRoomId} /> : null}\n            {redirectToHomeOrLoginPage()}\n\n            {\n                (!secondUserDetails.secondUsername) || isCheckingLoginStatus || !isSomeoneLoggedIn ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n                    :\n                    <PurpleGradientContainer childrenClassName=\"homeContainer\">\n                        <div\n                            className=\"chatWindow\"\n                            style={{ \"--actionBoxHeight\": CHAT_ACTION_BOX_HEIGHT }}\n                        >\n                            <div className=\"chatTitle\">\n                                <img alt=\"userIcon\" src={userIcon} />\n                                <div>\n                                    <div className=\"lightTitle\">{secondUserDetails.secondUsername}</div>\n                                </div>\n                            </div>\n\n                            <div id=\"chatContent\" className=\"chatContent\"></div>\n                            <div\n                                className=\"chatActionBox\"\n                                style={{ \"--actionBoxHeight\": CHAT_ACTION_BOX_HEIGHT }}\n                            >\n                                <ActionButton\n                                    dark={false}\n                                    showLoader={isStartingANewChatRoom}\n                                    buttonText=\"Start Chat\"\n                                    onClick={handleStartBtnClick}\n                                />\n                            </div>\n                        </div>\n                    </PurpleGradientContainer>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n        isStartingANewChatRoom: state.isStartingANewChatRoom,\n        isANewChatRoomStarted: state.isANewChatRoomStarted,\n        newChatRoomDetails: state.newChatRoomDetails,\n        userDetails: state.userDetails,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(NewChat);","/Users/mngos/Documents/MNgoChat3Web/src/encryptionConstants.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/dayjs.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/ImageViewer.js",["185","186"],"/Users/mngos/Documents/MNgoChat3Web/src/components/ImageWithLoader.js",["187"],"/Users/mngos/Documents/MNgoChat3Web/src/components/OfflineModal.js",["188"],"import React from 'react';\n\nimport warningImg from \"../images/warning.png\";\n\nexport default function OfflineModal() {\n    return (\n        <div className=\"warningModal\">\n            <div className=\"imageViewerBg\" />\n            <img src={warningImg} className=\"imageViewerImg\" />\n            <br />\n            <div className=\"redTitle\">You are not connected to internet</div>\n        </div>\n    );\n}","/Users/mngos/Documents/MNgoChat3Web/src/components/MessageItem.js",["189","190","191","192","193"],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":16,"column":8,"nodeType":"200","endLine":16,"endColumn":10,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":16,"column":53,"nodeType":"204","messageId":"205","endLine":16,"endColumn":73,"fix":"206"},{"ruleId":"207","severity":1,"message":"208","line":75,"column":24,"nodeType":"209","messageId":"210","endLine":75,"endColumn":25,"suggestions":"211"},{"ruleId":"207","severity":1,"message":"208","line":75,"column":49,"nodeType":"209","messageId":"210","endLine":75,"endColumn":50,"suggestions":"212"},{"ruleId":"198","severity":1,"message":"213","line":48,"column":8,"nodeType":"200","endLine":48,"endColumn":23,"suggestions":"214"},{"ruleId":"198","severity":1,"message":"199","line":30,"column":8,"nodeType":"200","endLine":30,"endColumn":10,"suggestions":"215"},{"ruleId":"198","severity":1,"message":"199","line":22,"column":8,"nodeType":"200","endLine":22,"endColumn":10,"suggestions":"216"},{"ruleId":"202","severity":1,"message":"217","line":18,"column":19,"nodeType":"204","messageId":"205","endLine":18,"endColumn":51,"fix":"218"},{"ruleId":"202","severity":1,"message":"219","line":30,"column":31,"nodeType":"204","messageId":"205","endLine":30,"endColumn":58,"fix":"220"},{"ruleId":"198","severity":1,"message":"221","line":38,"column":8,"nodeType":"200","endLine":38,"endColumn":26,"suggestions":"222"},{"ruleId":"198","severity":1,"message":"223","line":51,"column":8,"nodeType":"200","endLine":51,"endColumn":10,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":104,"column":39,"nodeType":"227","messageId":"228","endLine":104,"endColumn":46},{"ruleId":"225","severity":1,"message":"226","line":105,"column":31,"nodeType":"227","messageId":"228","endLine":105,"endColumn":38},{"ruleId":"202","severity":1,"message":"229","line":109,"column":53,"nodeType":"204","messageId":"205","endLine":109,"endColumn":90,"fix":"230"},{"ruleId":"225","severity":1,"message":"226","line":123,"column":39,"nodeType":"227","messageId":"228","endLine":123,"endColumn":46},{"ruleId":"225","severity":1,"message":"226","line":124,"column":31,"nodeType":"227","messageId":"228","endLine":124,"endColumn":38},{"ruleId":"202","severity":1,"message":"229","line":128,"column":53,"nodeType":"204","messageId":"205","endLine":128,"endColumn":90,"fix":"231"},{"ruleId":"225","severity":1,"message":"232","line":163,"column":67,"nodeType":"233","messageId":"234","endLine":163,"endColumn":75},{"ruleId":"225","severity":1,"message":"226","line":167,"column":63,"nodeType":"227","messageId":"228","endLine":167,"endColumn":70},{"ruleId":"202","severity":1,"message":"235","line":195,"column":55,"nodeType":"204","messageId":"205","endLine":195,"endColumn":103,"fix":"236"},{"ruleId":"202","severity":1,"message":"235","line":202,"column":55,"nodeType":"204","messageId":"205","endLine":202,"endColumn":103,"fix":"237"},{"ruleId":"198","severity":1,"message":"199","line":27,"column":8,"nodeType":"200","endLine":27,"endColumn":10,"suggestions":"238"},{"ruleId":"198","severity":1,"message":"239","line":34,"column":8,"nodeType":"200","endLine":34,"endColumn":27,"suggestions":"240"},{"ruleId":"198","severity":1,"message":"241","line":91,"column":8,"nodeType":"200","endLine":91,"endColumn":10,"suggestions":"242"},{"ruleId":"198","severity":1,"message":"243","line":104,"column":8,"nodeType":"200","endLine":104,"endColumn":23,"suggestions":"244"},{"ruleId":"225","severity":1,"message":"226","line":188,"column":42,"nodeType":"227","messageId":"228","endLine":188,"endColumn":49},{"ruleId":"225","severity":1,"message":"226","line":191,"column":49,"nodeType":"227","messageId":"228","endLine":191,"endColumn":56},{"ruleId":"198","severity":1,"message":"199","line":37,"column":8,"nodeType":"200","endLine":37,"endColumn":10,"suggestions":"245"},{"ruleId":"198","severity":1,"message":"246","line":54,"column":8,"nodeType":"200","endLine":54,"endColumn":27,"suggestions":"247"},{"ruleId":"198","severity":1,"message":"243","line":60,"column":8,"nodeType":"200","endLine":60,"endColumn":31,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":16,"column":13,"nodeType":"251","endLine":16,"endColumn":87},{"ruleId":"249","severity":1,"message":"250","line":18,"column":13,"nodeType":"251","endLine":18,"endColumn":130},{"ruleId":"249","severity":1,"message":"250","line":17,"column":13,"nodeType":"251","endLine":17,"endColumn":143},{"ruleId":"249","severity":1,"message":"250","line":9,"column":13,"nodeType":"251","endLine":9,"endColumn":64},{"ruleId":"202","severity":1,"message":"252","line":28,"column":45,"nodeType":"204","messageId":"205","endLine":28,"endColumn":108,"fix":"253"},{"ruleId":"202","severity":1,"message":"254","line":29,"column":38,"nodeType":"204","messageId":"205","endLine":29,"endColumn":62,"fix":"255"},{"ruleId":"202","severity":1,"message":"256","line":29,"column":68,"nodeType":"204","messageId":"205","endLine":29,"endColumn":96,"fix":"257"},{"ruleId":"202","severity":1,"message":"258","line":56,"column":41,"nodeType":"204","messageId":"205","endLine":56,"endColumn":67,"fix":"259"},{"ruleId":"202","severity":1,"message":"260","line":56,"column":73,"nodeType":"204","messageId":"205","endLine":56,"endColumn":103,"fix":"261"},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["264"],"no-useless-computed-key","Unnecessarily computed property [\"darkLoader\"] found.","Property","unnecessarilyComputedProperty",{"range":"265","text":"266"},"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["267","268"],["269","270"],"React Hook useEffect has missing dependencies: 'snackBarMsg' and 'snackBarType'. Either include them or remove the dependency array.",["271"],["272"],["273"],"Unnecessarily computed property [\"darkActionBtnContainer\"] found.",{"range":"274","text":"275"},"Unnecessarily computed property [\"darkActionBtnText\"] found.",{"range":"276","text":"277"},"React Hook useEffect has a missing dependency: 'btnClicked'. Either include it or remove the dependency array.",["278"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["279"],"array-callback-return","Array.prototype.map() expects a return value from function.","ReturnStatement","expectedReturnValue","Unnecessarily computed property [\"unSeenMsgUser\"] found.",{"range":"280","text":"281"},{"range":"282","text":"281"},"Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","Unnecessarily computed property [\"selectedBottomTabIcon\"] found.",{"range":"283","text":"284"},{"range":"285","text":"284"},["286"],"React Hook useEffect has missing dependencies: 'chatRoomId' and 'dispatch'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["287"],"React Hook useEffect has missing dependencies: 'chatRoomId', 'dispatch', and 'userTokenOfSecondUser'. Either include them or remove the dependency array.",["288"],"React Hook useEffect has a missing dependency: 'chatRoomId'. Either include it or remove the dependency array.",["289"],["290"],"React Hook useEffect has missing dependencies: 'dispatch' and 'selectedUserDetails'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["291"],["292"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Unnecessarily computed property [\"myMessageAlignment\"] found.",{"range":"293","text":"294"},"Unnecessarily computed property [\"myMessage\"] found.",{"range":"295","text":"296"},"Unnecessarily computed property [\"theirMessage\"] found.",{"range":"297","text":"298"},"Unnecessarily computed property [\"myReplyIcon\"] found.",{"range":"299","text":"300"},"Unnecessarily computed property [\"theirReplyIcon\"] found.",{"range":"301","text":"302"},"no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},[372,386],"\"darkLoader\"",{"messageId":"305","fix":"306","desc":"307"},{"messageId":"308","fix":"309","desc":"310"},{"messageId":"305","fix":"311","desc":"307"},{"messageId":"308","fix":"312","desc":"310"},{"desc":"313","fix":"314"},{"desc":"303","fix":"315"},{"desc":"303","fix":"316"},[365,391],"\"darkActionBtnContainer\"",[782,803],"\"darkActionBtnText\"",{"desc":"317","fix":"318"},{"desc":"303","fix":"319"},[3823,3840],"\"unSeenMsgUser\"",[4575,4592],[7512,7537],"\"selectedBottomTabIcon\"",[7797,7822],{"desc":"303","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"303","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},[756,778],"\"myMessageAlignment\"",[863,876],"\"myMessage\"",[893,909],"\"theirMessage\"",[2164,2179],"\"myReplyIcon\"",[2196,2214],"\"theirReplyIcon\"","Update the dependencies array to be: [dispatch]",{"range":"332","text":"333"},"removeEscape",{"range":"334","text":"335"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"336","text":"337"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"338","text":"335"},{"range":"339","text":"337"},"Update the dependencies array to be: [snackBarCount, snackBarMsg, snackBarType]",{"range":"340","text":"341"},{"range":"342","text":"333"},{"range":"343","text":"333"},"Update the dependencies array to be: [btnClicked, isUserRegistered]",{"range":"344","text":"345"},{"range":"346","text":"333"},{"range":"347","text":"333"},"Update the dependencies array to be: [chatRoomId, dispatch, isSomeoneLoggedIn]",{"range":"348","text":"349"},"Update the dependencies array to be: [chatRoomId, dispatch, userTokenOfSecondUser]",{"range":"350","text":"351"},"Update the dependencies array to be: [chatRoomId, isANewMessage]",{"range":"352","text":"353"},{"range":"354","text":"333"},"Update the dependencies array to be: [dispatch, isSomeoneLoggedIn, selectedUserDetails]",{"range":"355","text":"356"},"Update the dependencies array to be: [chatRoomId, isANewChatRoomStarted]",{"range":"357","text":"358"},[420,422],"[dispatch]",[1867,1868],"",[1867,1867],"\\",[1892,1893],[1892,1892],[1245,1260],"[snackBarCount, snackBarMsg, snackBarType]",[888,890],[682,684],[1243,1261],"[btnClicked, isUserRegistered]",[1559,1561],[654,656],[823,842],"[chatRoomId, dispatch, isSomeoneLoggedIn]",[3514,3516],"[chatRoomId, dispatch, userTokenOfSecondUser]",[3886,3901],"[chatRoomId, isANewMessage]",[1133,1135],[1812,1831],"[dispatch, isSomeoneLoggedIn, selectedUserDetails]",[1962,1985],"[chatRoomId, isANewChatRoomStarted]"]