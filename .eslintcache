[{"/Users/mngos/Documents/MNgoChat3Web/src/index.js":"1","/Users/mngos/Documents/MNgoChat3Web/src/App.js":"2","/Users/mngos/Documents/MNgoChat3Web/src/Routes.js":"3","/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js":"4","/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js":"5","/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js":"6","/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js":"7","/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js":"8","/Users/mngos/Documents/MNgoChat3Web/src/utils.js":"9","/Users/mngos/Documents/MNgoChat3Web/src/constants.js":"10","/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js":"11","/Users/mngos/Documents/MNgoChat3Web/src/apis.js":"12","/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js":"13","/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js":"14","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBarWrapper.js":"15","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js":"16","/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js":"17","/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js":"18","/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js":"19","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js":"20","/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js":"21","/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js":"22","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js":"23","/Users/mngos/Documents/MNgoChat3Web/src/components/HomePageContent.js":"24","/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js":"25","/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js":"26","/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js":"27"},{"size":176,"mtime":1611987774533,"results":"28","hashOfConfig":"29"},{"size":395,"mtime":1612004842265,"results":"30","hashOfConfig":"29"},{"size":807,"mtime":1612094463514,"results":"31","hashOfConfig":"29"},{"size":127,"mtime":1611987877261,"results":"32","hashOfConfig":"29"},{"size":229,"mtime":1611986021286,"results":"33","hashOfConfig":"29"},{"size":7354,"mtime":1612187643934,"results":"34","hashOfConfig":"29"},{"size":1092,"mtime":1612024932299,"results":"35","hashOfConfig":"29"},{"size":419,"mtime":1612092008183,"results":"36","hashOfConfig":"29"},{"size":1648,"mtime":1612025165094,"results":"37","hashOfConfig":"29"},{"size":1401,"mtime":1612099149141,"results":"38","hashOfConfig":"29"},{"size":6625,"mtime":1612187503343,"results":"39","hashOfConfig":"29"},{"size":1623,"mtime":1612029072017,"results":"40","hashOfConfig":"29"},{"size":575,"mtime":1612001849296,"results":"41","hashOfConfig":"29"},{"size":625,"mtime":1612001939665,"results":"42","hashOfConfig":"29"},{"size":3321,"mtime":1612186550410,"results":"43","hashOfConfig":"29"},{"size":577,"mtime":1612004483020,"results":"44","hashOfConfig":"29"},{"size":3916,"mtime":1612062014815,"results":"45","hashOfConfig":"29"},{"size":1816,"mtime":1612096150998,"results":"46","hashOfConfig":"29"},{"size":1008,"mtime":1612018737347,"results":"47","hashOfConfig":"29"},{"size":447,"mtime":1612008632632,"results":"48","hashOfConfig":"29"},{"size":1333,"mtime":1612021617383,"results":"49","hashOfConfig":"29"},{"size":6120,"mtime":1612066271225,"results":"50","hashOfConfig":"29"},{"size":1820,"mtime":1612062813584,"results":"51","hashOfConfig":"29"},{"size":6015,"mtime":1612098633689,"results":"52","hashOfConfig":"29"},{"size":4591,"mtime":1612187587462,"results":"53","hashOfConfig":"29"},{"size":539,"mtime":1612076140501,"results":"54","hashOfConfig":"29"},{"size":5379,"mtime":1612186817285,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1v2xoz5",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mngos/Documents/MNgoChat3Web/src/index.js",[],["119","120"],"/Users/mngos/Documents/MNgoChat3Web/src/App.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/Routes.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js",["121"],"import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\n\nimport { checkLoginStatusAction } from \"../redux/actions/index\";\n\nfunction Landing({\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    dispatch,\n}) {\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (isSomeoneLoggedIn) {\n                return <Redirect to=\"/home\" />;\n            } else {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Landing);","/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js",["122"],"import React from \"react\";\nimport cx from \"classnames\";\n\nimport loaderImg from '../images/loader.gif';\n\nexport default function LoadingAnimation({\n    dark,\n    loading,\n}) {\n    return loading ? (\n        <center>\n            <img\n                alt=\"loading\"\n                className={cx(\"loadingAnimation\", { [\"darkLoader\"]: dark })}\n                src={loaderImg}\n            />\n        </center>\n    ) : null;\n}","/Users/mngos/Documents/MNgoChat3Web/src/utils.js",["123","124"],"import React from 'react';\nimport Cookies from \"universal-cookie\";\nimport Slide from '@material-ui/core/Slide';\n\nimport { COOKIE_EXPIRATION_TIME } from \"./constants\";\nconst cookies = new Cookies();\n\n//animation for apperance of dialog box\nexport const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n//function to get cookie value\nexport function getCookieValue(cookie_name) {\n    let value = null;\n    try {\n        const cookieValue = cookies.get(cookie_name);\n        if (cookieValue) {\n            value = cookieValue;\n        }\n    } catch {\n        value = null;\n    }\n\n    return value;\n};\n\n//function to set cookie \nexport function makeCookie(key, value) {\n    try {\n        cookies.set(key, value, { path: \"/\", expires: COOKIE_EXPIRATION_TIME, });\n\n        return true;\n    } catch {\n        return false;\n    }\n};\n\n//function to validate name, contact no and email\nexport function validateUsername(name) {\n    var re = /^[a-zA-Z0-9_]*$/;\n    return re.test(name);\n};\n\nexport function validateName(name) {\n    var re = /^[a-zA-Z0-9 ]*$/;\n    return re.test(name);\n};\n\nexport function validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n};\n\nexport function validateNumber(number) {\n    var re = /^[0-9]*$/;\n    return re.test(number);\n};\n\n//function to logout\nexport async function logout() {\n    await cookies.remove(\"mngoChatLoggedUserToken\", { path: \"/\", expires: COOKIE_EXPIRATION_TIME });\n};","/Users/mngos/Documents/MNgoChat3Web/src/constants.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/apis.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBarWrapper.js",["125"],"/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js",["126"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport logoImg from \"../images/logo.png\";\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport ActionButton from \"../components/ActionButton\";\nimport SignInUpButton from \"../components/SignInUpButton\";\n\nimport { PROJECT_NAME } from \"../constants\";\nimport {\n    showSnackBarAction,\n    checkLoginStatusAction,\n    loginUserAction\n} from \"../redux/actions/index\";\n\nfunction Login({\n    isLoggingUser,\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    history,\n    dispatch,\n}) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function handleLoginBtnClick(e) {\n        e.preventDefault();\n\n        if (isLoggingUser) {\n            return;\n        }\n\n        if (username !== \"\" && password !== \"\") {\n            dispatch(loginUserAction(username, password));\n        } else {\n            dispatch(showSnackBarAction(\"Please fill all the input fields\"));\n        }\n    }\n\n    function handleSignUpBtnClick() {\n        history.push(\"/register\");\n    }\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (isSomeoneLoggedIn) {\n                return <Redirect to=\"/home\" />;\n            } else {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n                    :\n                    <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                        <img\n                            className=\"logoImg\"\n                            alt=\"logoImg\"\n                            src={logoImg}\n                        />\n                        <div className=\"logoTitle\">{PROJECT_NAME}</div>\n\n                        <form className=\"formContainer\" onSubmit={handleLoginBtnClick}>\n                            <input\n                                type=\"text\"\n                                className=\"formInputField\"\n                                placeholder=\"Username\"\n                                autoFocus\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n\n                            <input\n                                type=\"password\"\n                                className=\"formInputField\"\n                                placeholder=\"Password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n\n                            <ActionButton\n                                dark={false}\n                                showLoader={isLoggingUser}\n                                buttonText=\"Login\"\n                                onClick={handleLoginBtnClick}\n                            />\n                        </form>\n\n                        <SignInUpButton\n                            otherText=\"Don't have an account yet?\"\n                            buttonText=\"Signup\"\n                            onClick={handleSignUpBtnClick}\n                        />\n                    </PurpleGradientContainer>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggingUser: state.isLoggingUser,\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Login);","/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js",["127"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport VerifyPasscode from \"../components/VerifyPasscode\";\nimport HomePageContent from \"../components/HomePageContent\";\n\nimport { checkLoginStatusAction } from \"../redux/actions/index\";\n\nfunction Home({\n    isPasscodeVerified,\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    history,\n    dispatch,\n}) {\n    isPasscodeVerified = true;\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (!isSomeoneLoggedIn) {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n                    :\n                    <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                        {\n                            isPasscodeVerified ?\n                                <HomePageContent history={history} />\n                                :\n                                <VerifyPasscode />\n                        }\n                    </PurpleGradientContainer>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isPasscodeVerified: state.isPasscodeVerified,\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Home);","/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js",["128","129"],"import React from 'react';\nimport cx from \"classnames\";\n\nimport LoadingAnimation from \"./LoadingAnimation\";\n\nexport default function ActionButton({\n    dark,\n    className,\n    textclassName,\n    showLoader,\n    buttonText = \"Button\",\n    onClick,\n}) {\n    return (\n        <button\n            className={cx(\n                \"actionBtnContainer\",\n                { [\"darkActionBtnContainer\"]: dark },\n                className\n            )}\n            onClick={!showLoader ? onClick : null}\n        >\n            {\n                showLoader ?\n                    <LoadingAnimation dark={!dark} loading={showLoader} />\n                    :\n                    <div\n                        className={cx(\n                            \"actionBtnText\",\n                            { [\"darkActionBtnText\"]: dark },\n                            textclassName\n                        )}\n                    >\n                        {buttonText}\n                    </div>\n            }\n        </button>\n    );\n}","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js",["130"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport logoImg from \"../images/logo.png\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport ActionButton from \"../components/ActionButton\";\n\nimport { PROJECT_NAME } from \"../constants\";\nimport {\n    validateUsername,\n    validateName,\n    validateEmail,\n    validateNumber,\n} from \"../utils\";\nimport { showSnackBarAction, registerUserAction } from \"../redux/actions/index\";\n\nfunction Register({\n    isRegisteringUser,\n    isUserRegistered,\n    dispatch,\n}) {\n    const [username, setUsername] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confPassword, setConfPassword] = useState(\"\");\n    const [passcode, setPasscode] = useState(\"\");\n    const [confPasscode, setConfPasscode] = useState(\"\");\n\n    const [redirectToLoginPage, setRedirectToLoginPage] = useState(false);\n    const [btnClicked, setBtnClicked] = useState(false);\n\n    useEffect(() => {\n        if (isUserRegistered && btnClicked) {\n            setRedirectToLoginPage(true);\n        }\n    }, [isUserRegistered]);\n\n    function handleRegisterBtnClick(e) {\n        e.preventDefault();\n\n        if (isRegisteringUser) {\n            return;\n        }\n\n        if (username !== \"\" && name !== \"\" && email !== \"\" && password !== \"\" && confPassword !== \"\" && passcode !== \"\" && confPasscode !== \"\") {\n            if (!validateUsername(username)) {\n                dispatch(showSnackBarAction(\"Username cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateName(name)) {\n                dispatch(showSnackBarAction(\"Name cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateEmail(email)) {\n                dispatch(showSnackBarAction(\"Invalid Email id format\"));\n                return;\n            }\n            if (password !== confPassword) {\n                dispatch(showSnackBarAction(\"Password do not match\"));\n                return;\n            }\n            if (!validateNumber(passcode)) {\n                dispatch(showSnackBarAction(\"Passcode must be a number\"));\n                return;\n            }\n            if (passcode.length !== 4) {\n                dispatch(showSnackBarAction(\"Passcode must be 4 digits long\"));\n                return;\n            }\n            if (passcode !== confPasscode) {\n                dispatch(showSnackBarAction(\"Passcode do not match\"));\n                return;\n            }\n\n            setBtnClicked(true);\n            dispatch(registerUserAction(username, name, email, password, passcode));\n        } else {\n            dispatch(showSnackBarAction(\"Please fill all the input fields\"));\n        }\n    }\n\n    return (\n        <>\n            {redirectToLoginPage ? <Redirect to=\"/login\" /> : null}\n\n            <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                <img\n                    className=\"logoImg\"\n                    alt=\"logoImg\"\n                    src={logoImg}\n                />\n                <div className=\"logoTitle\">{PROJECT_NAME}</div>\n\n                <form className=\"formContainer\" onSubmit={handleRegisterBtnClick}>\n                    <input\n                        type=\"text\"\n                        className=\"formInputField\"\n                        placeholder=\"Username\"\n                        autoFocus\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n\n                    <input\n                        type=\"text\"\n                        className=\"formInputField\"\n                        placeholder=\"Name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n\n                    <input\n                        type=\"email\"\n                        className=\"formInputField\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Confirm Password\"\n                        value={confPassword}\n                        onChange={(e) => setConfPassword(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Passcode\"\n                        value={passcode}\n                        maxLength={4}\n                        onChange={(e) => setPasscode(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Confirm Passcode\"\n                        value={confPasscode}\n                        maxLength={4}\n                        onChange={(e) => setConfPasscode(e.target.value)}\n                    />\n\n                    <ActionButton\n                        dark={false}\n                        showLoader={isRegisteringUser}\n                        buttonText=\"Register\"\n                        onClick={handleRegisterBtnClick}\n                    />\n                </form>\n            </PurpleGradientContainer>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isRegisteringUser: state.isRegisteringUser,\n        isUserRegistered: state.isUserRegistered,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Register);","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/HomePageContent.js",["131","132","133","134","135"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport cx from \"classnames\";\n\nimport userIcon from \"../images/user.png\";\nimport allChats from \"../images/allChats.png\";\nimport allUsersIcon from \"../images/allUsers.png\";\nimport LoadingAnimation from \"./LoadingAnimation\";\n\nimport {\n    BOTTOM_NAV_HEIGHT,\n    BOTTOM_NAV_BOTTOM_MARGIN,\n} from \"../constants\";\nimport {\n    setUserActiveStatus,\n    getUserChatRooms,\n    getAllUsers,\n} from \"../firebaseQueries\";\n\nconst CHATS_TITLE = \"Chats\";\nconst USERS_TITLE = \"Users\";\n\nfunction HomePageContent({\n    isGettingUserAllChats,\n    isGettingAllUsers,\n    allUsers = {},\n    userAllChats = {},\n    userDetails: {\n        username: loggedUsername\n    } = {},\n    history,\n    dispatch,\n}) {\n    const [title, setTitle] = useState(CHATS_TITLE);\n\n    useEffect(() => {\n        getUserChatRooms(dispatch);\n        getAllUsers(dispatch);\n    }, []);\n\n    useEffect(() => {\n        setUserActiveStatus(true);\n\n        const setActiveStatusInterval = setInterval(function() {\n            setUserActiveStatus(true);\n        }, 10000); //setting user lastActive time every 10 seconds\n        //other users need to compare their local time with that user lastActiveTime to get his active status\n\n        return () => {\n            clearInterval(setActiveStatusInterval);\n        }\n    }, []);\n\n    function hanldeNavBtnClick(type) {\n        if (type === CHATS_TITLE) {\n            setTitle(CHATS_TITLE)\n        } else {\n            setTitle(USERS_TITLE)\n        }\n    }\n\n    function handleUserItemClick(chatRoomId) {\n        history.push(\"chat/\" + chatRoomId);\n    }\n\n    return (\n        <div className=\"homeContainer\">\n            <div\n                className=\"homeContentContainer\"\n                style={{\n                    \"--bottomNavHeight\": BOTTOM_NAV_HEIGHT,\n                    \"--bottomNavMarginBottom\": BOTTOM_NAV_BOTTOM_MARGIN,\n                }}\n            >\n                <div className=\"homeTitle\">\n                    <div className=\"darkTitle\">{title}</div>\n                </div>\n                <div className=\"homeContent\">\n                    {\n                        isGettingUserAllChats || isGettingAllUsers ?\n                            <LoadingAnimation dark loading />\n                            :\n                            <div>\n                                {\n                                    title === CHATS_TITLE ?\n                                        Object.keys(userAllChats).map(function(key) {\n                                            const user = userAllChats[key];\n                                            const unSeenMsgCount = user.unSeenMsgCount || 0;\n                                            const isUnSeen = (unSeenMsgCount > 0);\n\n                                            return (\n                                                <div\n                                                    key={key}\n                                                    className={cx(\"listUserItem\", { [\"unSeenMsgUser\"]: isUnSeen })}\n                                                    onClick={() => handleUserItemClick(key)}\n                                                >\n                                                    <img alt=\"userIcon\" src={userIcon} />\n                                                    {user.displayName}\n                                                </div>\n                                            )\n                                        })\n                                        :\n                                        Object.keys(allUsers).map(function(userToken) {\n                                            const user = allUsers[userToken];\n                                            const displayName = user.username;\n\n                                            if (displayName !== loggedUsername) {\n                                                return (\n                                                    <div\n                                                        key={userToken}\n                                                        className=\"listUserItem\"\n                                                        onClick={handleUserItemClick}\n                                                    >\n                                                        <img alt=\"userIcon\" src={userIcon} />\n                                                        {displayName}\n                                                    </div>\n                                                )\n                                            }\n                                        })\n                                }\n                            </div>\n                    }\n                </div>\n            </div>\n\n            <div\n                className=\"homeBottomNavContainer\"\n                style={{\n                    \"--bottomNavHeight\": BOTTOM_NAV_HEIGHT,\n                    \"--bottomNavMarginBottom\": BOTTOM_NAV_BOTTOM_MARGIN,\n                }}\n            >\n                <img\n                    className={cx(\"bottomTabIcons\", { [\"selectedBottomTabIcon\"]: title === CHATS_TITLE })}\n                    alt=\"allChats\"\n                    src={allChats}\n                    onClick={() => hanldeNavBtnClick(CHATS_TITLE)}\n                />\n\n                <img\n                    className={cx(\"bottomTabIcons\", { [\"selectedBottomTabIcon\"]: title === USERS_TITLE })}\n                    alt=\"allUsers\"\n                    src={allUsersIcon}\n                    onClick={() => hanldeNavBtnClick(USERS_TITLE)}\n                />\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isGettingUserAllChats: state.isGettingUserAllChats,\n        isGettingAllUsers: state.isGettingAllUsers,\n        allUsers: state.allUsers,\n        userAllChats: state.userAllChats,\n        userDetails: state.userDetails,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(HomePageContent);","/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js",["136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":16,"column":8,"nodeType":"144","endLine":16,"endColumn":10,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":14,"column":53,"nodeType":"148","messageId":"149","endLine":14,"endColumn":73,"fix":"150"},{"ruleId":"151","severity":1,"message":"152","line":51,"column":24,"nodeType":"153","messageId":"154","endLine":51,"endColumn":25,"suggestions":"155"},{"ruleId":"151","severity":1,"message":"152","line":51,"column":49,"nodeType":"153","messageId":"154","endLine":51,"endColumn":50,"suggestions":"156"},{"ruleId":"142","severity":1,"message":"157","line":36,"column":8,"nodeType":"144","endLine":36,"endColumn":23,"suggestions":"158"},{"ruleId":"142","severity":1,"message":"143","line":30,"column":8,"nodeType":"144","endLine":30,"endColumn":10,"suggestions":"159"},{"ruleId":"142","severity":1,"message":"143","line":22,"column":8,"nodeType":"144","endLine":22,"endColumn":10,"suggestions":"160"},{"ruleId":"146","severity":1,"message":"161","line":18,"column":19,"nodeType":"148","messageId":"149","endLine":18,"endColumn":51,"fix":"162"},{"ruleId":"146","severity":1,"message":"163","line":30,"column":31,"nodeType":"148","messageId":"149","endLine":30,"endColumn":58,"fix":"164"},{"ruleId":"142","severity":1,"message":"165","line":38,"column":8,"nodeType":"144","endLine":38,"endColumn":26,"suggestions":"166"},{"ruleId":"142","severity":1,"message":"167","line":39,"column":8,"nodeType":"144","endLine":39,"endColumn":10,"suggestions":"168"},{"ruleId":"146","severity":1,"message":"169","line":94,"column":85,"nodeType":"148","messageId":"149","endLine":94,"endColumn":112,"fix":"170"},{"ruleId":"171","severity":1,"message":"172","line":103,"column":67,"nodeType":"173","messageId":"174","endLine":103,"endColumn":75},{"ruleId":"146","severity":1,"message":"175","line":134,"column":55,"nodeType":"148","messageId":"149","endLine":134,"endColumn":103,"fix":"176"},{"ruleId":"146","severity":1,"message":"175","line":141,"column":55,"nodeType":"148","messageId":"149","endLine":141,"endColumn":103,"fix":"177"},{"ruleId":"178","severity":1,"message":"179","line":17,"column":5,"nodeType":"180","messageId":"181","endLine":17,"endColumn":24},{"ruleId":"142","severity":1,"message":"182","line":40,"column":8,"nodeType":"144","endLine":40,"endColumn":10,"suggestions":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["186"],"no-useless-computed-key","Unnecessarily computed property [\"darkLoader\"] found.","Property","unnecessarilyComputedProperty",{"range":"187","text":"188"},"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["189","190"],["191","192"],"React Hook useEffect has missing dependencies: 'snackBarMsg' and 'snackBarType'. Either include them or remove the dependency array.",["193"],["194"],["195"],"Unnecessarily computed property [\"darkActionBtnContainer\"] found.",{"range":"196","text":"197"},"Unnecessarily computed property [\"darkActionBtnText\"] found.",{"range":"198","text":"199"},"React Hook useEffect has a missing dependency: 'btnClicked'. Either include it or remove the dependency array.",["200"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["201"],"Unnecessarily computed property [\"unSeenMsgUser\"] found.",{"range":"202","text":"203"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","Unnecessarily computed property [\"selectedBottomTabIcon\"] found.",{"range":"204","text":"205"},{"range":"206","text":"205"},"no-unused-vars","'setUserActiveStatus' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'chatRoomId' and 'dispatch'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["207"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},[314,328],"\"darkLoader\"",{"messageId":"210","fix":"211","desc":"212"},{"messageId":"213","fix":"214","desc":"215"},{"messageId":"210","fix":"216","desc":"212"},{"messageId":"213","fix":"217","desc":"215"},{"desc":"218","fix":"219"},{"desc":"208","fix":"220"},{"desc":"208","fix":"221"},[365,391],"\"darkActionBtnContainer\"",[782,803],"\"darkActionBtnText\"",{"desc":"222","fix":"223"},{"desc":"208","fix":"224"},[3031,3048],"\"unSeenMsgUser\"",[5118,5143],"\"selectedBottomTabIcon\"",[5403,5428],{"desc":"225","fix":"226"},"Update the dependencies array to be: [dispatch]",{"range":"227","text":"228"},"removeEscape",{"range":"229","text":"230"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"231","text":"232"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"233","text":"230"},{"range":"234","text":"232"},"Update the dependencies array to be: [snackBarCount, snackBarMsg, snackBarType]",{"range":"235","text":"236"},{"range":"237","text":"228"},{"range":"238","text":"228"},"Update the dependencies array to be: [btnClicked, isUserRegistered]",{"range":"239","text":"240"},{"range":"241","text":"228"},"Update the dependencies array to be: [chatRoomId, dispatch]",{"range":"242","text":"243"},[420,422],"[dispatch]",[1218,1219],"",[1218,1218],"\\",[1243,1244],[1243,1243],[757,772],"[snackBarCount, snackBarMsg, snackBarType]",[888,890],[682,684],[1243,1261],"[btnClicked, isUserRegistered]",[926,928],[1084,1086],"[chatRoomId, dispatch]"]