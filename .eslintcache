[{"/Users/mngos/Documents/MNgoChat3Web/src/index.js":"1","/Users/mngos/Documents/MNgoChat3Web/src/App.js":"2","/Users/mngos/Documents/MNgoChat3Web/src/Routes.js":"3","/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js":"4","/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js":"5","/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js":"6","/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js":"7","/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js":"8","/Users/mngos/Documents/MNgoChat3Web/src/utils.js":"9","/Users/mngos/Documents/MNgoChat3Web/src/constants.js":"10","/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js":"11","/Users/mngos/Documents/MNgoChat3Web/src/apis.js":"12","/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js":"13","/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js":"14","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBarWrapper.js":"15","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js":"16","/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js":"17","/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js":"18","/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js":"19","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js":"20","/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js":"21","/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js":"22","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js":"23","/Users/mngos/Documents/MNgoChat3Web/src/components/HomePageContent.js":"24","/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js":"25","/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js":"26","/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js":"27","/Users/mngos/Documents/MNgoChat3Web/src/components/ChatPageContent.js":"28"},{"size":176,"mtime":1611987774533,"results":"29","hashOfConfig":"30"},{"size":395,"mtime":1612004842265,"results":"31","hashOfConfig":"30"},{"size":807,"mtime":1612094463514,"results":"32","hashOfConfig":"30"},{"size":127,"mtime":1611987877261,"results":"33","hashOfConfig":"30"},{"size":229,"mtime":1611986021286,"results":"34","hashOfConfig":"30"},{"size":9268,"mtime":1612284248375,"results":"35","hashOfConfig":"30"},{"size":1092,"mtime":1612024932299,"results":"36","hashOfConfig":"30"},{"size":456,"mtime":1612272257813,"results":"37","hashOfConfig":"30"},{"size":3090,"mtime":1612279049420,"results":"38","hashOfConfig":"30"},{"size":1440,"mtime":1612196002952,"results":"39","hashOfConfig":"30"},{"size":7113,"mtime":1612273571058,"results":"40","hashOfConfig":"30"},{"size":1623,"mtime":1612029072017,"results":"41","hashOfConfig":"30"},{"size":575,"mtime":1612001849296,"results":"42","hashOfConfig":"30"},{"size":625,"mtime":1612001939665,"results":"43","hashOfConfig":"30"},{"size":3321,"mtime":1612186550410,"results":"44","hashOfConfig":"30"},{"size":577,"mtime":1612004483020,"results":"45","hashOfConfig":"30"},{"size":3916,"mtime":1612062014815,"results":"46","hashOfConfig":"30"},{"size":1838,"mtime":1612273727483,"results":"47","hashOfConfig":"30"},{"size":1008,"mtime":1612018737347,"results":"48","hashOfConfig":"30"},{"size":447,"mtime":1612008632632,"results":"49","hashOfConfig":"30"},{"size":1333,"mtime":1612021617383,"results":"50","hashOfConfig":"30"},{"size":6120,"mtime":1612066271225,"results":"51","hashOfConfig":"30"},{"size":1737,"mtime":1612273417184,"results":"52","hashOfConfig":"30"},{"size":6271,"mtime":1612284081253,"results":"53","hashOfConfig":"30"},{"size":7466,"mtime":1612282874528,"results":"54","hashOfConfig":"30"},{"size":539,"mtime":1612076140501,"results":"55","hashOfConfig":"30"},{"size":1843,"mtime":1612277366501,"results":"56","hashOfConfig":"30"},{"size":6660,"mtime":1612283656044,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1v2xoz5",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},"/Users/mngos/Documents/MNgoChat3Web/src/index.js",[],["120","121"],"/Users/mngos/Documents/MNgoChat3Web/src/App.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/Routes.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js",["122"],"import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\n\nimport { checkLoginStatusAction } from \"../redux/actions/index\";\n\nfunction Landing({\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    dispatch,\n}) {\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (isSomeoneLoggedIn) {\n                return <Redirect to=\"/home\" />;\n            } else {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Landing);","/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js",["123"],"/Users/mngos/Documents/MNgoChat3Web/src/utils.js",["124","125"],"/Users/mngos/Documents/MNgoChat3Web/src/constants.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/apis.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBarWrapper.js",["126"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport SnackBar from \"./SnackBar\";\n\nfunction SnackBarWrapper({\n    snackBarCount,\n    snackBarMsg,\n    snackBarType,\n\n    checkLoginStatusError,\n\n    loginUserError,\n\n    isUserRegistered,\n    registerUserError,\n\n    verifyPasscodeError,\n\n    getUserAllChatsError,\n\n    getAllUsersError,\n\n    getChatRoomDetailsError,\n\n    children,\n}) {\n    const [snackBarVisible, setSnackBarVisible] = useState(false);\n    const [snackBarMsgState, setSnackBarMsgState] = useState(\"\");\n    const [snackBarTypeState, setSnackBarTypeState] = useState(\"success\")\n\n    useEffect(() => {\n        if (snackBarMsg) {\n            makeSnackBar(snackBarMsg, snackBarType);\n        }\n    }, [snackBarCount]);\n\n    useEffect(() => {\n        if (checkLoginStatusError) {\n            makeSnackBar(checkLoginStatusError);\n        }\n    }, [checkLoginStatusError]);\n\n    useEffect(() => {\n        if (loginUserError) {\n            makeSnackBar(loginUserError);\n        }\n    }, [loginUserError]);\n\n    useEffect(() => {\n        if (registerUserError) {\n            makeSnackBar(registerUserError);\n        }\n    }, [registerUserError]);\n\n    useEffect(() => {\n        if (isUserRegistered) {\n            makeSnackBar(\"Successfully registered. Please login to continue\", \"success\");\n        }\n    }, [isUserRegistered]);\n\n    useEffect(() => {\n        if (verifyPasscodeError) {\n            makeSnackBar(verifyPasscodeError);\n        }\n    }, [verifyPasscodeError]);\n\n    useEffect(() => {\n        if (getUserAllChatsError) {\n            makeSnackBar(getUserAllChatsError);\n        }\n    }, [getUserAllChatsError]);\n\n    useEffect(() => {\n        if (getUserAllChatsError) {\n            makeSnackBar(getUserAllChatsError);\n        }\n    }, [getUserAllChatsError]);\n\n    useEffect(() => {\n        if (getAllUsersError) {\n            makeSnackBar(getAllUsersError);\n        }\n    }, [getAllUsersError]);\n\n    useEffect(() => {\n        if (getChatRoomDetailsError) {\n            makeSnackBar(getChatRoomDetailsError);\n        }\n    }, [getChatRoomDetailsError]);\n\n    function makeSnackBar(msg, type) {\n        setSnackBarMsgState(msg);\n        setSnackBarTypeState(type);\n        setSnackBarVisible(true);\n    }\n\n    function handleSnackBarClose() {\n        setSnackBarVisible(false);\n    }\n\n    return (\n        <>\n            {children}\n            <SnackBar\n                open={snackBarVisible}\n                msg={snackBarMsgState}\n                type={snackBarTypeState}\n                handleClose={handleSnackBarClose}\n            />\n        </>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        snackBarCount: state.snackBarCount,\n        snackBarMsg: state.snackBarMsg,\n        snackBarType: state.snackBarType,\n\n        checkLoginStatusError: state.checkLoginStatusError,\n\n        loginUserError: state.loginUserError,\n\n        isUserRegistered: state.isUserRegistered,\n        registerUserError: state.registerUserError,\n\n        verifyPasscodeError: state.verifyPasscodeError,\n\n        getUserAllChatsError: state.getUserAllChatsError,\n\n        getAllUsersError: state.getAllUsersError,\n\n        getChatRoomDetailsError: state.getChatRoomDetailsError,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(SnackBarWrapper);","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js",["127"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport logoImg from \"../images/logo.png\";\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport ActionButton from \"../components/ActionButton\";\nimport SignInUpButton from \"../components/SignInUpButton\";\n\nimport { PROJECT_NAME } from \"../constants\";\nimport {\n    showSnackBarAction,\n    checkLoginStatusAction,\n    loginUserAction\n} from \"../redux/actions/index\";\n\nfunction Login({\n    isLoggingUser,\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    history,\n    dispatch,\n}) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function handleLoginBtnClick(e) {\n        e.preventDefault();\n\n        if (isLoggingUser) {\n            return;\n        }\n\n        if (username !== \"\" && password !== \"\") {\n            dispatch(loginUserAction(username, password));\n        } else {\n            dispatch(showSnackBarAction(\"Please fill all the input fields\"));\n        }\n    }\n\n    function handleSignUpBtnClick() {\n        history.push(\"/register\");\n    }\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (isSomeoneLoggedIn) {\n                return <Redirect to=\"/home\" />;\n            } else {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n                    :\n                    <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                        <img\n                            className=\"logoImg\"\n                            alt=\"logoImg\"\n                            src={logoImg}\n                        />\n                        <div className=\"logoTitle\">{PROJECT_NAME}</div>\n\n                        <form className=\"formContainer\" onSubmit={handleLoginBtnClick}>\n                            <input\n                                type=\"text\"\n                                className=\"formInputField\"\n                                placeholder=\"Username\"\n                                autoFocus\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n\n                            <input\n                                type=\"password\"\n                                className=\"formInputField\"\n                                placeholder=\"Password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n\n                            <ActionButton\n                                dark={false}\n                                showLoader={isLoggingUser}\n                                buttonText=\"Login\"\n                                onClick={handleLoginBtnClick}\n                            />\n                        </form>\n\n                        <SignInUpButton\n                            otherText=\"Don't have an account yet?\"\n                            buttonText=\"Signup\"\n                            onClick={handleSignUpBtnClick}\n                        />\n                    </PurpleGradientContainer>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggingUser: state.isLoggingUser,\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Login);","/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js",["128"],"/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js",["129","130"],"import React from 'react';\nimport cx from \"classnames\";\n\nimport LoadingAnimation from \"./LoadingAnimation\";\n\nexport default function ActionButton({\n    dark,\n    className,\n    textclassName,\n    showLoader,\n    buttonText = \"Button\",\n    onClick,\n}) {\n    return (\n        <button\n            className={cx(\n                \"actionBtnContainer\",\n                { [\"darkActionBtnContainer\"]: dark },\n                className\n            )}\n            onClick={!showLoader ? onClick : null}\n        >\n            {\n                showLoader ?\n                    <LoadingAnimation dark={!dark} loading={showLoader} />\n                    :\n                    <div\n                        className={cx(\n                            \"actionBtnText\",\n                            { [\"darkActionBtnText\"]: dark },\n                            textclassName\n                        )}\n                    >\n                        {buttonText}\n                    </div>\n            }\n        </button>\n    );\n}","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js",["131"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport logoImg from \"../images/logo.png\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport ActionButton from \"../components/ActionButton\";\n\nimport { PROJECT_NAME } from \"../constants\";\nimport {\n    validateUsername,\n    validateName,\n    validateEmail,\n    validateNumber,\n} from \"../utils\";\nimport { showSnackBarAction, registerUserAction } from \"../redux/actions/index\";\n\nfunction Register({\n    isRegisteringUser,\n    isUserRegistered,\n    dispatch,\n}) {\n    const [username, setUsername] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confPassword, setConfPassword] = useState(\"\");\n    const [passcode, setPasscode] = useState(\"\");\n    const [confPasscode, setConfPasscode] = useState(\"\");\n\n    const [redirectToLoginPage, setRedirectToLoginPage] = useState(false);\n    const [btnClicked, setBtnClicked] = useState(false);\n\n    useEffect(() => {\n        if (isUserRegistered && btnClicked) {\n            setRedirectToLoginPage(true);\n        }\n    }, [isUserRegistered]);\n\n    function handleRegisterBtnClick(e) {\n        e.preventDefault();\n\n        if (isRegisteringUser) {\n            return;\n        }\n\n        if (username !== \"\" && name !== \"\" && email !== \"\" && password !== \"\" && confPassword !== \"\" && passcode !== \"\" && confPasscode !== \"\") {\n            if (!validateUsername(username)) {\n                dispatch(showSnackBarAction(\"Username cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateName(name)) {\n                dispatch(showSnackBarAction(\"Name cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateEmail(email)) {\n                dispatch(showSnackBarAction(\"Invalid Email id format\"));\n                return;\n            }\n            if (password !== confPassword) {\n                dispatch(showSnackBarAction(\"Password do not match\"));\n                return;\n            }\n            if (!validateNumber(passcode)) {\n                dispatch(showSnackBarAction(\"Passcode must be a number\"));\n                return;\n            }\n            if (passcode.length !== 4) {\n                dispatch(showSnackBarAction(\"Passcode must be 4 digits long\"));\n                return;\n            }\n            if (passcode !== confPasscode) {\n                dispatch(showSnackBarAction(\"Passcode do not match\"));\n                return;\n            }\n\n            setBtnClicked(true);\n            dispatch(registerUserAction(username, name, email, password, passcode));\n        } else {\n            dispatch(showSnackBarAction(\"Please fill all the input fields\"));\n        }\n    }\n\n    return (\n        <>\n            {redirectToLoginPage ? <Redirect to=\"/login\" /> : null}\n\n            <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                <img\n                    className=\"logoImg\"\n                    alt=\"logoImg\"\n                    src={logoImg}\n                />\n                <div className=\"logoTitle\">{PROJECT_NAME}</div>\n\n                <form className=\"formContainer\" onSubmit={handleRegisterBtnClick}>\n                    <input\n                        type=\"text\"\n                        className=\"formInputField\"\n                        placeholder=\"Username\"\n                        autoFocus\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n\n                    <input\n                        type=\"text\"\n                        className=\"formInputField\"\n                        placeholder=\"Name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n\n                    <input\n                        type=\"email\"\n                        className=\"formInputField\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Confirm Password\"\n                        value={confPassword}\n                        onChange={(e) => setConfPassword(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Passcode\"\n                        value={passcode}\n                        maxLength={4}\n                        onChange={(e) => setPasscode(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Confirm Passcode\"\n                        value={confPasscode}\n                        maxLength={4}\n                        onChange={(e) => setConfPasscode(e.target.value)}\n                    />\n\n                    <ActionButton\n                        dark={false}\n                        showLoader={isRegisteringUser}\n                        buttonText=\"Register\"\n                        onClick={handleRegisterBtnClick}\n                    />\n                </form>\n            </PurpleGradientContainer>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isRegisteringUser: state.isRegisteringUser,\n        isUserRegistered: state.isUserRegistered,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Register);","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/HomePageContent.js",["132","133","134","135","136"],"/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js",["137","138"],"/Users/mngos/Documents/MNgoChat3Web/src/components/ChatPageContent.js",["139","140","141","142","143","144","145","146","147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":16,"column":8,"nodeType":"154","endLine":16,"endColumn":10,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":15,"column":53,"nodeType":"158","messageId":"159","endLine":15,"endColumn":73,"fix":"160"},{"ruleId":"161","severity":1,"message":"162","line":52,"column":24,"nodeType":"163","messageId":"164","endLine":52,"endColumn":25,"suggestions":"165"},{"ruleId":"161","severity":1,"message":"162","line":52,"column":49,"nodeType":"163","messageId":"164","endLine":52,"endColumn":50,"suggestions":"166"},{"ruleId":"152","severity":1,"message":"167","line":36,"column":8,"nodeType":"154","endLine":36,"endColumn":23,"suggestions":"168"},{"ruleId":"152","severity":1,"message":"153","line":30,"column":8,"nodeType":"154","endLine":30,"endColumn":10,"suggestions":"169"},{"ruleId":"152","severity":1,"message":"153","line":22,"column":8,"nodeType":"154","endLine":22,"endColumn":10,"suggestions":"170"},{"ruleId":"156","severity":1,"message":"171","line":18,"column":19,"nodeType":"158","messageId":"159","endLine":18,"endColumn":51,"fix":"172"},{"ruleId":"156","severity":1,"message":"173","line":30,"column":31,"nodeType":"158","messageId":"159","endLine":30,"endColumn":58,"fix":"174"},{"ruleId":"152","severity":1,"message":"175","line":38,"column":8,"nodeType":"154","endLine":38,"endColumn":26,"suggestions":"176"},{"ruleId":"152","severity":1,"message":"177","line":51,"column":8,"nodeType":"154","endLine":51,"endColumn":10,"suggestions":"178"},{"ruleId":"156","severity":1,"message":"179","line":97,"column":85,"nodeType":"158","messageId":"159","endLine":97,"endColumn":112,"fix":"180"},{"ruleId":"181","severity":1,"message":"182","line":106,"column":67,"nodeType":"183","messageId":"184","endLine":106,"endColumn":75},{"ruleId":"156","severity":1,"message":"185","line":137,"column":55,"nodeType":"158","messageId":"159","endLine":137,"endColumn":103,"fix":"186"},{"ruleId":"156","severity":1,"message":"185","line":144,"column":55,"nodeType":"158","messageId":"159","endLine":144,"endColumn":103,"fix":"187"},{"ruleId":"152","severity":1,"message":"153","line":27,"column":8,"nodeType":"154","endLine":27,"endColumn":10,"suggestions":"188"},{"ruleId":"152","severity":1,"message":"189","line":34,"column":8,"nodeType":"154","endLine":34,"endColumn":27,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":12,"column":8,"nodeType":"193","messageId":"194","endLine":12,"endColumn":24},{"ruleId":"152","severity":1,"message":"195","line":69,"column":8,"nodeType":"154","endLine":69,"endColumn":10,"suggestions":"196"},{"ruleId":"152","severity":1,"message":"197","line":78,"column":8,"nodeType":"154","endLine":78,"endColumn":26,"suggestions":"198"},{"ruleId":"181","severity":1,"message":"182","line":93,"column":47,"nodeType":"183","messageId":"184","endLine":93,"endColumn":55},{"ruleId":"181","severity":1,"message":"199","line":94,"column":42,"nodeType":"200","messageId":"201","endLine":94,"endColumn":49},{"ruleId":"181","severity":1,"message":"199","line":100,"column":49,"nodeType":"200","messageId":"201","endLine":100,"endColumn":56},{"ruleId":"156","severity":1,"message":"202","line":111,"column":35,"nodeType":"158","messageId":"159","endLine":111,"endColumn":98,"fix":"203"},{"ruleId":"156","severity":1,"message":"204","line":116,"column":39,"nodeType":"158","messageId":"159","endLine":116,"endColumn":93,"fix":"205"},{"ruleId":"156","severity":1,"message":"206","line":117,"column":39,"nodeType":"158","messageId":"159","endLine":117,"endColumn":96,"fix":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["210"],"no-useless-computed-key","Unnecessarily computed property [\"darkLoader\"] found.","Property","unnecessarilyComputedProperty",{"range":"211","text":"212"},"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["213","214"],["215","216"],"React Hook useEffect has missing dependencies: 'snackBarMsg' and 'snackBarType'. Either include them or remove the dependency array.",["217"],["218"],["219"],"Unnecessarily computed property [\"darkActionBtnContainer\"] found.",{"range":"220","text":"221"},"Unnecessarily computed property [\"darkActionBtnText\"] found.",{"range":"222","text":"223"},"React Hook useEffect has a missing dependency: 'btnClicked'. Either include it or remove the dependency array.",["224"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["225"],"Unnecessarily computed property [\"unSeenMsgUser\"] found.",{"range":"226","text":"227"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","Unnecessarily computed property [\"selectedBottomTabIcon\"] found.",{"range":"228","text":"229"},{"range":"230","text":"229"},["231"],"React Hook useEffect has missing dependencies: 'chatRoomId' and 'dispatch'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["232"],"no-unused-vars","'LoadingAnimation' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'chatRoomId', 'dispatch', and 'userTokenOfSecondUser'. Either include them or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'chatRoomId'. Either include it or remove the dependency array.",["234"],"Array.prototype.map() expects a return value from function.","ReturnStatement","expectedReturnValue","Unnecessarily computed property [\"myMessageAlignment\"] found.",{"range":"235","text":"236"},"Unnecessarily computed property [\"myMessage\"] found.",{"range":"237","text":"238"},"Unnecessarily computed property [\"theirMessage\"] found.",{"range":"239","text":"240"},"no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},[351,365],"\"darkLoader\"",{"messageId":"243","fix":"244","desc":"245"},{"messageId":"246","fix":"247","desc":"248"},{"messageId":"243","fix":"249","desc":"245"},{"messageId":"246","fix":"250","desc":"248"},{"desc":"251","fix":"252"},{"desc":"241","fix":"253"},{"desc":"241","fix":"254"},[365,391],"\"darkActionBtnContainer\"",[782,803],"\"darkActionBtnText\"",{"desc":"255","fix":"256"},{"desc":"241","fix":"257"},[3256,3273],"\"unSeenMsgUser\"",[5374,5399],"\"selectedBottomTabIcon\"",[5659,5684],{"desc":"241","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},[3606,3628],"\"myMessageAlignment\"",[3847,3860],"\"myMessage\"",[3943,3959],"\"theirMessage\"","Update the dependencies array to be: [dispatch]",{"range":"265","text":"266"},"removeEscape",{"range":"267","text":"268"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"269","text":"270"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"271","text":"268"},{"range":"272","text":"270"},"Update the dependencies array to be: [snackBarCount, snackBarMsg, snackBarType]",{"range":"273","text":"274"},{"range":"275","text":"266"},{"range":"276","text":"266"},"Update the dependencies array to be: [btnClicked, isUserRegistered]",{"range":"277","text":"278"},{"range":"279","text":"266"},{"range":"280","text":"266"},"Update the dependencies array to be: [chatRoomId, dispatch, isSomeoneLoggedIn]",{"range":"281","text":"282"},"Update the dependencies array to be: [chatRoomId, dispatch, userTokenOfSecondUser]",{"range":"283","text":"284"},"Update the dependencies array to be: [chatRoomId, chatRoomMessages]",{"range":"285","text":"286"},[420,422],"[dispatch]",[1295,1296],"",[1295,1295],"\\",[1320,1321],[1320,1320],[757,772],"[snackBarCount, snackBarMsg, snackBarType]",[888,890],[682,684],[1243,1261],"[btnClicked, isUserRegistered]",[1421,1423],[654,656],[823,842],"[chatRoomId, dispatch, isSomeoneLoggedIn]",[2274,2276],"[chatRoomId, dispatch, userTokenOfSecondUser]",[2540,2558],"[chatRoomId, chatRoomMessages]"]