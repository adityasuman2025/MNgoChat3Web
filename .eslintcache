[{"/Users/mngos/Documents/MNgoChat3Web/src/index.js":"1","/Users/mngos/Documents/MNgoChat3Web/src/App.js":"2","/Users/mngos/Documents/MNgoChat3Web/src/Routes.js":"3","/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js":"4","/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js":"5","/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js":"6","/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js":"7","/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js":"8","/Users/mngos/Documents/MNgoChat3Web/src/utils.js":"9","/Users/mngos/Documents/MNgoChat3Web/src/constants.js":"10","/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js":"11","/Users/mngos/Documents/MNgoChat3Web/src/apis.js":"12","/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js":"13","/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js":"14","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBarWrapper.js":"15","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js":"16","/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js":"17","/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js":"18","/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js":"19","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js":"20","/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js":"21","/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js":"22","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js":"23","/Users/mngos/Documents/MNgoChat3Web/src/components/HomePageContent.js":"24","/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js":"25","/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js":"26","/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js":"27","/Users/mngos/Documents/MNgoChat3Web/src/components/ChatPageContent.js":"28","/Users/mngos/Documents/MNgoChat3Web/src/pages/NewChat.js":"29","/Users/mngos/Documents/MNgoChat3Web/src/encryptionConstants.js":"30","/Users/mngos/Documents/MNgoChat3Web/src/dayjs.js":"31"},{"size":176,"mtime":1611987774533,"results":"32","hashOfConfig":"33"},{"size":395,"mtime":1612004842265,"results":"34","hashOfConfig":"33"},{"size":932,"mtime":1612335403903,"results":"35","hashOfConfig":"33"},{"size":127,"mtime":1611987877261,"results":"36","hashOfConfig":"33"},{"size":229,"mtime":1611986021286,"results":"37","hashOfConfig":"33"},{"size":11362,"mtime":1612340076237,"results":"38","hashOfConfig":"33"},{"size":1092,"mtime":1612024932299,"results":"39","hashOfConfig":"33"},{"size":456,"mtime":1612272257813,"results":"40","hashOfConfig":"33"},{"size":3698,"mtime":1612340596461,"results":"41","hashOfConfig":"33"},{"size":1483,"mtime":1612323289329,"results":"42","hashOfConfig":"33"},{"size":7810,"mtime":1612340616925,"results":"43","hashOfConfig":"33"},{"size":1623,"mtime":1612029072017,"results":"44","hashOfConfig":"33"},{"size":575,"mtime":1612001849296,"results":"45","hashOfConfig":"33"},{"size":625,"mtime":1612001939665,"results":"46","hashOfConfig":"33"},{"size":3563,"mtime":1612338192546,"results":"47","hashOfConfig":"33"},{"size":577,"mtime":1612004483020,"results":"48","hashOfConfig":"33"},{"size":3916,"mtime":1612062014815,"results":"49","hashOfConfig":"33"},{"size":1838,"mtime":1612273727483,"results":"50","hashOfConfig":"33"},{"size":1008,"mtime":1612018737347,"results":"51","hashOfConfig":"33"},{"size":447,"mtime":1612008632632,"results":"52","hashOfConfig":"33"},{"size":1333,"mtime":1612021617383,"results":"53","hashOfConfig":"33"},{"size":6120,"mtime":1612066271225,"results":"54","hashOfConfig":"33"},{"size":1737,"mtime":1612273417184,"results":"55","hashOfConfig":"33"},{"size":8317,"mtime":1612341288269,"results":"56","hashOfConfig":"33"},{"size":10695,"mtime":1612340123551,"results":"57","hashOfConfig":"33"},{"size":539,"mtime":1612076140501,"results":"58","hashOfConfig":"33"},{"size":1843,"mtime":1612277366501,"results":"59","hashOfConfig":"33"},{"size":7575,"mtime":1612326863851,"results":"60","hashOfConfig":"33"},{"size":4509,"mtime":1612339281667,"results":"61","hashOfConfig":"33"},{"size":48,"mtime":1612319836974,"results":"62","hashOfConfig":"33"},{"size":96,"mtime":1612322829367,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1v2xoz5",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":3,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/Users/mngos/Documents/MNgoChat3Web/src/index.js",[],["135","136"],"/Users/mngos/Documents/MNgoChat3Web/src/App.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/Routes.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js",["137"],"import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\n\nimport { checkLoginStatusAction } from \"../redux/actions/index\";\n\nfunction Landing({\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    dispatch,\n}) {\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (isSomeoneLoggedIn) {\n                return <Redirect to=\"/home\" />;\n            } else {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Landing);","/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js",["138"],"import React from \"react\";\nimport cx from \"classnames\";\n\nimport loaderImg from '../images/loader.gif';\n\nexport default function LoadingAnimation({\n    dark,\n    loading,\n    className,\n}) {\n    return loading ? (\n        <center className={className}>\n            <img\n                alt=\"loading\"\n                className={cx(\"loadingAnimation\", { [\"darkLoader\"]: dark })}\n                src={loaderImg}\n            />\n        </center>\n    ) : null;\n}","/Users/mngos/Documents/MNgoChat3Web/src/utils.js",["139","140"],"/Users/mngos/Documents/MNgoChat3Web/src/constants.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/apis.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBarWrapper.js",["141"],"/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js",["142"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport logoImg from \"../images/logo.png\";\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport ActionButton from \"../components/ActionButton\";\nimport SignInUpButton from \"../components/SignInUpButton\";\n\nimport { PROJECT_NAME } from \"../constants\";\nimport {\n    showSnackBarAction,\n    checkLoginStatusAction,\n    loginUserAction\n} from \"../redux/actions/index\";\n\nfunction Login({\n    isLoggingUser,\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    history,\n    dispatch,\n}) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function handleLoginBtnClick(e) {\n        e.preventDefault();\n\n        if (isLoggingUser) {\n            return;\n        }\n\n        if (username !== \"\" && password !== \"\") {\n            dispatch(loginUserAction(username, password));\n        } else {\n            dispatch(showSnackBarAction(\"Please fill all the input fields\"));\n        }\n    }\n\n    function handleSignUpBtnClick() {\n        history.push(\"/register\");\n    }\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (isSomeoneLoggedIn) {\n                return <Redirect to=\"/home\" />;\n            } else {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n                    :\n                    <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                        <img\n                            className=\"logoImg\"\n                            alt=\"logoImg\"\n                            src={logoImg}\n                        />\n                        <div className=\"logoTitle\">{PROJECT_NAME}</div>\n\n                        <form className=\"formContainer\" onSubmit={handleLoginBtnClick}>\n                            <input\n                                type=\"text\"\n                                className=\"formInputField\"\n                                placeholder=\"Username\"\n                                autoFocus\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n\n                            <input\n                                type=\"password\"\n                                className=\"formInputField\"\n                                placeholder=\"Password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n\n                            <ActionButton\n                                dark={false}\n                                showLoader={isLoggingUser}\n                                buttonText=\"Login\"\n                                onClick={handleLoginBtnClick}\n                            />\n                        </form>\n\n                        <SignInUpButton\n                            otherText=\"Don't have an account yet?\"\n                            buttonText=\"Signup\"\n                            onClick={handleSignUpBtnClick}\n                        />\n                    </PurpleGradientContainer>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggingUser: state.isLoggingUser,\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Login);","/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js",["143"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport VerifyPasscode from \"../components/VerifyPasscode\";\nimport HomePageContent from \"../components/HomePageContent\";\n\nimport { checkLoginStatusAction } from \"../redux/actions/index\";\n\nfunction Home({\n    isPasscodeVerified,\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    history,\n    dispatch,\n}) {\n    isPasscodeVerified = true;\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (!isSomeoneLoggedIn) {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus || !isSomeoneLoggedIn ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n                    :\n                    <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                        {\n                            isPasscodeVerified ?\n                                <HomePageContent history={history} />\n                                :\n                                <VerifyPasscode />\n                        }\n                    </PurpleGradientContainer>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isPasscodeVerified: state.isPasscodeVerified,\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Home);","/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js",["144","145"],"import React from 'react';\nimport cx from \"classnames\";\n\nimport LoadingAnimation from \"./LoadingAnimation\";\n\nexport default function ActionButton({\n    dark,\n    className,\n    textclassName,\n    showLoader,\n    buttonText = \"Button\",\n    onClick,\n}) {\n    return (\n        <button\n            className={cx(\n                \"actionBtnContainer\",\n                { [\"darkActionBtnContainer\"]: dark },\n                className\n            )}\n            onClick={!showLoader ? onClick : null}\n        >\n            {\n                showLoader ?\n                    <LoadingAnimation dark={!dark} loading={showLoader} />\n                    :\n                    <div\n                        className={cx(\n                            \"actionBtnText\",\n                            { [\"darkActionBtnText\"]: dark },\n                            textclassName\n                        )}\n                    >\n                        {buttonText}\n                    </div>\n            }\n        </button>\n    );\n}","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js",["146"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport logoImg from \"../images/logo.png\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport ActionButton from \"../components/ActionButton\";\n\nimport { PROJECT_NAME } from \"../constants\";\nimport {\n    validateUsername,\n    validateName,\n    validateEmail,\n    validateNumber,\n} from \"../utils\";\nimport { showSnackBarAction, registerUserAction } from \"../redux/actions/index\";\n\nfunction Register({\n    isRegisteringUser,\n    isUserRegistered,\n    dispatch,\n}) {\n    const [username, setUsername] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confPassword, setConfPassword] = useState(\"\");\n    const [passcode, setPasscode] = useState(\"\");\n    const [confPasscode, setConfPasscode] = useState(\"\");\n\n    const [redirectToLoginPage, setRedirectToLoginPage] = useState(false);\n    const [btnClicked, setBtnClicked] = useState(false);\n\n    useEffect(() => {\n        if (isUserRegistered && btnClicked) {\n            setRedirectToLoginPage(true);\n        }\n    }, [isUserRegistered]);\n\n    function handleRegisterBtnClick(e) {\n        e.preventDefault();\n\n        if (isRegisteringUser) {\n            return;\n        }\n\n        if (username !== \"\" && name !== \"\" && email !== \"\" && password !== \"\" && confPassword !== \"\" && passcode !== \"\" && confPasscode !== \"\") {\n            if (!validateUsername(username)) {\n                dispatch(showSnackBarAction(\"Username cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateName(name)) {\n                dispatch(showSnackBarAction(\"Name cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateEmail(email)) {\n                dispatch(showSnackBarAction(\"Invalid Email id format\"));\n                return;\n            }\n            if (password !== confPassword) {\n                dispatch(showSnackBarAction(\"Password do not match\"));\n                return;\n            }\n            if (!validateNumber(passcode)) {\n                dispatch(showSnackBarAction(\"Passcode must be a number\"));\n                return;\n            }\n            if (passcode.length !== 4) {\n                dispatch(showSnackBarAction(\"Passcode must be 4 digits long\"));\n                return;\n            }\n            if (passcode !== confPasscode) {\n                dispatch(showSnackBarAction(\"Passcode do not match\"));\n                return;\n            }\n\n            setBtnClicked(true);\n            dispatch(registerUserAction(username, name, email, password, passcode));\n        } else {\n            dispatch(showSnackBarAction(\"Please fill all the input fields\"));\n        }\n    }\n\n    return (\n        <>\n            {redirectToLoginPage ? <Redirect to=\"/login\" /> : null}\n\n            <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                <img\n                    className=\"logoImg\"\n                    alt=\"logoImg\"\n                    src={logoImg}\n                />\n                <div className=\"logoTitle\">{PROJECT_NAME}</div>\n\n                <form className=\"formContainer\" onSubmit={handleRegisterBtnClick}>\n                    <input\n                        type=\"text\"\n                        className=\"formInputField\"\n                        placeholder=\"Username\"\n                        autoFocus\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n\n                    <input\n                        type=\"text\"\n                        className=\"formInputField\"\n                        placeholder=\"Name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n\n                    <input\n                        type=\"email\"\n                        className=\"formInputField\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Confirm Password\"\n                        value={confPassword}\n                        onChange={(e) => setConfPassword(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Passcode\"\n                        value={passcode}\n                        maxLength={4}\n                        onChange={(e) => setPasscode(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Confirm Passcode\"\n                        value={confPasscode}\n                        maxLength={4}\n                        onChange={(e) => setConfPasscode(e.target.value)}\n                    />\n\n                    <ActionButton\n                        dark={false}\n                        showLoader={isRegisteringUser}\n                        buttonText=\"Register\"\n                        onClick={handleRegisterBtnClick}\n                    />\n                </form>\n            </PurpleGradientContainer>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isRegisteringUser: state.isRegisteringUser,\n        isUserRegistered: state.isUserRegistered,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Register);","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/HomePageContent.js",["147","148","149","150","151","152","153","154","155","156","157"],"/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js",["158","159"],"import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport ChatPageContent from \"../components/ChatPageContent\";\n\nimport {\n    checkLoginStatusAction,\n    getChatRoomDetailsAction\n} from \"../redux/actions/index\";\n\nfunction Chat({\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    isGettingChatRoomDetails,\n    isChatRoomDetailsFetched,\n    match: {\n        params: {\n            chatRoomId,\n        } = {}\n    } = {},\n    dispatch,\n}) {\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    //to get chat room details\n    useEffect(() => {\n        if (isSomeoneLoggedIn) {\n            dispatch(getChatRoomDetailsAction(chatRoomId));\n        }\n    }, [isSomeoneLoggedIn]);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (!isSomeoneLoggedIn) {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus || (isGettingChatRoomDetails || !isChatRoomDetailsFetched) ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus || isGettingChatRoomDetails} />\n                    :\n                    <ChatPageContent dispatch={dispatch} chatRoomId={chatRoomId} />\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n        isGettingChatRoomDetails: state.isGettingChatRoomDetails,\n        isChatRoomDetailsFetched: state.isChatRoomDetailsFetched,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Chat);","/Users/mngos/Documents/MNgoChat3Web/src/components/ChatPageContent.js",["160","161","162","163","164","165","166","167","168"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport cx from \"classnames\";\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\n\nimport userIcon from \"../images/user.png\";\nimport sendIcon from \"../images/send2.png\";\nimport uploadImgIcon from \"../images/uploadImg.png\";\nimport PurpleGradientContainer from \"./PurpleGradientContainer\";\nimport LoadingAnimation from \"./LoadingAnimation\";\n\nimport dayjs from \"../dayjs\";\nimport { CHAT_ACTION_BOX_HEIGHT, MSG_TYPE_IMAGE, DEFAULT_DATE } from \"../constants\";\nimport { getLoggedUserToken, scrollADivToBottom } from \"../utils\";\nimport {\n    setUserActiveStatus,\n    getActiveStatusOfAUser,\n    getMessagesOfAChatRoom,\n    removeGetMessagesOfAChatRoomFirebaseQuery,\n    sendMessageInAChatRoom,\n    readingNewMessagesOfTheLoggedUserForThatChatRoom,\n    setUserTypeStatus,\n    getTypeStatusOfAUser,\n} from \"../firebaseQueries\";\n\nfunction ChatPageContent({\n    isGettingChatRoomMessages,\n    chatRoomId,\n    activeStatusOfAUser,\n    typeStatusOfAUser,\n    chatRoomDetails: {\n        usernameOfSecondUser,\n        userTokenOfSecondUser,\n    } = {},\n    chatRoomMessages = [],\n    dispatch,\n}) {\n    dayjs.extend(localizedFormat);\n\n    const [msgText, setMsgText] = useState(\"\");\n\n    //to get messages of the room\n    //getting active status of the 2nd user and setting active status of the logged user\n    useEffect(() => {\n        // window.addEventListener('offline', function(e) {\n        //     console.log('offline');\n        // });\n\n        // window.addEventListener('online', function(e) {\n        //     console.log('online');\n        // });\n\n        getMessagesOfAChatRoom(dispatch, chatRoomId);\n        getActiveStatusOfAUser(dispatch, userTokenOfSecondUser);\n        setUserActiveStatus(true);\n        getTypeStatusOfAUser(dispatch, chatRoomId, userTokenOfSecondUser);\n\n        const setActiveStatusInterval = setInterval(function() {\n            getActiveStatusOfAUser(dispatch, userTokenOfSecondUser);\n            setUserActiveStatus(true);\n        }, 10000); //setting user lastActive time every 10 seconds\n        //other users need to compare their local time with that user lastActiveTime to get his active status\n\n        const getTypeStatusInterval = setInterval(function() {\n            getTypeStatusOfAUser(dispatch, chatRoomId, userTokenOfSecondUser);\n        }, 1000); //getting user typings status in 1 s\n        //other users need to compare their local time with that user lastTypedTime to get his typing status\n\n        return () => {\n            removeGetMessagesOfAChatRoomFirebaseQuery(chatRoomId);\n            clearInterval(setActiveStatusInterval);\n            clearInterval(getTypeStatusInterval);\n        }\n    }, []);\n\n    //to scroll the chat window to bottom when a new message comes\n    useEffect(() => {\n        if (chatRoomMessages) {\n            scrollADivToBottom(\"chatContent\");\n\n            readingNewMessagesOfTheLoggedUserForThatChatRoom(chatRoomId);\n        }\n    }, [chatRoomMessages]);\n\n    async function handleSendMsgBtnClick(e) {\n        e.preventDefault();\n\n        if (msgText.trim() !== \"\") {\n            await sendMessageInAChatRoom(chatRoomId, msgText, \"text\", userTokenOfSecondUser);\n            setMsgText(\"\");\n        }\n    }\n\n    function renderMessages() {\n        const loggedUserToken = getLoggedUserToken();\n\n        const messageIds = [];\n        const toRender = chatRoomMessages.map(function(msg, index) {\n            if (typeof msg !== \"object\") return;\n\n            const messageId = msg.messageId;\n            const type = msg.type;\n            const formattedTime = dayjs(DEFAULT_DATE + msg.time).format(\"LT\");\n\n            if (messageIds.includes(messageId)) return;\n\n            messageIds.push(messageId);\n            if (type === MSG_TYPE_IMAGE) {\n\n            } else {\n                return (\n                    <div key={messageId + index} className={\"messageContainer\"} >\n                        <div\n                            className={cx(\n                                \"message\",\n                                { [\"myMessageAlignment\"]: msg.sentByUserToken === loggedUserToken }\n                            )}\n                        >\n                            <div\n                                className={cx(\n                                    { [\"myMessage\"]: msg.sentByUserToken === loggedUserToken },\n                                    { [\"theirMessage\"]: msg.sentByUserToken !== loggedUserToken }\n                                )}\n                                title={formattedTime}\n                            >\n                                {msg.message}\n                            </div>\n                        </div>\n                        <div className=\"messageTime\">{formattedTime}</div>\n                    </div>\n                )\n            }\n        });\n\n        return toRender;\n    }\n\n    function handleChangeMsgInput(e) {\n        setMsgText(e.target.value)\n        setUserTypeStatus(chatRoomId);\n    }\n\n    return (\n        <PurpleGradientContainer childrenClassName=\"homeContainer\">\n            <div\n                className=\"chatWindow\"\n                style={{ \"--actionBoxHeight\": CHAT_ACTION_BOX_HEIGHT }}\n            >\n                <div className=\"chatTitle\">\n                    <img alt=\"userIcon\" src={userIcon} />\n                    <div>\n                        <div className=\"lightTitle\">{usernameOfSecondUser}</div>\n                        <div className=\"onlineStatus\">\n                            {\n                                typeStatusOfAUser ?\n                                    typeStatusOfAUser\n                                    :\n                                    activeStatusOfAUser ?\n                                        activeStatusOfAUser !== \"online\" ?\n                                            dayjs(activeStatusOfAUser).format(\"lll\")\n                                            : \"online\"\n                                        : \"\"\n                            }\n                        </div>\n                    </div>\n                </div>\n\n                <div id=\"chatContent\" className=\"chatContent\">\n                    {\n                        // isGettingChatRoomMessages ?\n                        // <LoadingAnimation loading={true} className=\"chatWindowLoader\" />\n                        // : \n                        renderMessages()\n                    }\n                </div>\n            </div>\n\n            <form\n                className=\"chatActionBox\"\n                style={{ \"--actionBoxHeight\": CHAT_ACTION_BOX_HEIGHT }}\n                onSubmit={handleSendMsgBtnClick}\n            >\n                <img alt=\"uploadImgIcon\" src={uploadImgIcon} />\n                <input\n                    type=\"text\"\n                    className=\"sendMsgTextInput\"\n                    placeholder=\"type message\"\n                    autoFocus\n                    value={msgText}\n                    onChange={handleChangeMsgInput}\n                />\n                <img alt=\"sendIcon\" src={sendIcon} onClick={handleSendMsgBtnClick} />\n            </form>\n        </PurpleGradientContainer>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isGettingChatRoomMessages: state.isGettingChatRoomMessages,\n        activeStatusOfAUser: state.activeStatusOfAUser,\n        typeStatusOfAUser: state.typeStatusOfAUser,\n        chatRoomDetails: state.chatRoomDetails,\n        chatRoomMessages: state.chatRoomMessages,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(ChatPageContent);","/Users/mngos/Documents/MNgoChat3Web/src/pages/NewChat.js",["169","170","171"],"/Users/mngos/Documents/MNgoChat3Web/src/encryptionConstants.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/dayjs.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":16,"column":8,"nodeType":"178","endLine":16,"endColumn":10,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":15,"column":53,"nodeType":"182","messageId":"183","endLine":15,"endColumn":73,"fix":"184"},{"ruleId":"185","severity":1,"message":"186","line":75,"column":24,"nodeType":"187","messageId":"188","endLine":75,"endColumn":25,"suggestions":"189"},{"ruleId":"185","severity":1,"message":"186","line":75,"column":49,"nodeType":"187","messageId":"188","endLine":75,"endColumn":50,"suggestions":"190"},{"ruleId":"176","severity":1,"message":"191","line":38,"column":8,"nodeType":"178","endLine":38,"endColumn":23,"suggestions":"192"},{"ruleId":"176","severity":1,"message":"177","line":30,"column":8,"nodeType":"178","endLine":30,"endColumn":10,"suggestions":"193"},{"ruleId":"176","severity":1,"message":"177","line":22,"column":8,"nodeType":"178","endLine":22,"endColumn":10,"suggestions":"194"},{"ruleId":"180","severity":1,"message":"195","line":18,"column":19,"nodeType":"182","messageId":"183","endLine":18,"endColumn":51,"fix":"196"},{"ruleId":"180","severity":1,"message":"197","line":30,"column":31,"nodeType":"182","messageId":"183","endLine":30,"endColumn":58,"fix":"198"},{"ruleId":"176","severity":1,"message":"199","line":38,"column":8,"nodeType":"178","endLine":38,"endColumn":26,"suggestions":"200"},{"ruleId":"176","severity":1,"message":"201","line":51,"column":8,"nodeType":"178","endLine":51,"endColumn":10,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":102,"column":39,"nodeType":"205","messageId":"206","endLine":102,"endColumn":46},{"ruleId":"203","severity":1,"message":"204","line":103,"column":31,"nodeType":"205","messageId":"206","endLine":103,"endColumn":38},{"ruleId":"180","severity":1,"message":"207","line":107,"column":53,"nodeType":"182","messageId":"183","endLine":107,"endColumn":90,"fix":"208"},{"ruleId":"203","severity":1,"message":"204","line":121,"column":39,"nodeType":"205","messageId":"206","endLine":121,"endColumn":46},{"ruleId":"203","severity":1,"message":"204","line":122,"column":31,"nodeType":"205","messageId":"206","endLine":122,"endColumn":38},{"ruleId":"180","severity":1,"message":"207","line":126,"column":53,"nodeType":"182","messageId":"183","endLine":126,"endColumn":90,"fix":"209"},{"ruleId":"203","severity":1,"message":"210","line":161,"column":67,"nodeType":"211","messageId":"212","endLine":161,"endColumn":75},{"ruleId":"203","severity":1,"message":"204","line":165,"column":63,"nodeType":"205","messageId":"206","endLine":165,"endColumn":70},{"ruleId":"180","severity":1,"message":"213","line":193,"column":55,"nodeType":"182","messageId":"183","endLine":193,"endColumn":103,"fix":"214"},{"ruleId":"180","severity":1,"message":"213","line":200,"column":55,"nodeType":"182","messageId":"183","endLine":200,"endColumn":103,"fix":"215"},{"ruleId":"176","severity":1,"message":"177","line":27,"column":8,"nodeType":"178","endLine":27,"endColumn":10,"suggestions":"216"},{"ruleId":"176","severity":1,"message":"217","line":34,"column":8,"nodeType":"178","endLine":34,"endColumn":27,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":10,"column":8,"nodeType":"221","messageId":"222","endLine":10,"endColumn":24},{"ruleId":"176","severity":1,"message":"223","line":74,"column":8,"nodeType":"178","endLine":74,"endColumn":10,"suggestions":"224"},{"ruleId":"176","severity":1,"message":"225","line":83,"column":8,"nodeType":"178","endLine":83,"endColumn":26,"suggestions":"226"},{"ruleId":"203","severity":1,"message":"210","line":98,"column":47,"nodeType":"211","messageId":"212","endLine":98,"endColumn":55},{"ruleId":"203","severity":1,"message":"204","line":99,"column":42,"nodeType":"205","messageId":"206","endLine":99,"endColumn":49},{"ruleId":"203","severity":1,"message":"204","line":105,"column":49,"nodeType":"205","messageId":"206","endLine":105,"endColumn":56},{"ruleId":"180","severity":1,"message":"227","line":116,"column":35,"nodeType":"182","messageId":"183","endLine":116,"endColumn":98,"fix":"228"},{"ruleId":"180","severity":1,"message":"229","line":121,"column":39,"nodeType":"182","messageId":"183","endLine":121,"endColumn":93,"fix":"230"},{"ruleId":"180","severity":1,"message":"231","line":122,"column":39,"nodeType":"182","messageId":"183","endLine":122,"endColumn":96,"fix":"232"},{"ruleId":"176","severity":1,"message":"177","line":37,"column":8,"nodeType":"178","endLine":37,"endColumn":10,"suggestions":"233"},{"ruleId":"176","severity":1,"message":"234","line":54,"column":8,"nodeType":"178","endLine":54,"endColumn":27,"suggestions":"235"},{"ruleId":"176","severity":1,"message":"225","line":60,"column":8,"nodeType":"178","endLine":60,"endColumn":31,"suggestions":"236"},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["239"],"no-useless-computed-key","Unnecessarily computed property [\"darkLoader\"] found.","Property","unnecessarilyComputedProperty",{"range":"240","text":"241"},"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["242","243"],["244","245"],"React Hook useEffect has missing dependencies: 'snackBarMsg' and 'snackBarType'. Either include them or remove the dependency array.",["246"],["247"],["248"],"Unnecessarily computed property [\"darkActionBtnContainer\"] found.",{"range":"249","text":"250"},"Unnecessarily computed property [\"darkActionBtnText\"] found.",{"range":"251","text":"252"},"React Hook useEffect has a missing dependency: 'btnClicked'. Either include it or remove the dependency array.",["253"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["254"],"array-callback-return","Array.prototype.map() expects a return value from function.","ReturnStatement","expectedReturnValue","Unnecessarily computed property [\"unSeenMsgUser\"] found.",{"range":"255","text":"256"},{"range":"257","text":"256"},"Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","Unnecessarily computed property [\"selectedBottomTabIcon\"] found.",{"range":"258","text":"259"},{"range":"260","text":"259"},["261"],"React Hook useEffect has missing dependencies: 'chatRoomId' and 'dispatch'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["262"],"no-unused-vars","'LoadingAnimation' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'chatRoomId', 'dispatch', and 'userTokenOfSecondUser'. Either include them or remove the dependency array.",["263"],"React Hook useEffect has a missing dependency: 'chatRoomId'. Either include it or remove the dependency array.",["264"],"Unnecessarily computed property [\"myMessageAlignment\"] found.",{"range":"265","text":"266"},"Unnecessarily computed property [\"myMessage\"] found.",{"range":"267","text":"268"},"Unnecessarily computed property [\"theirMessage\"] found.",{"range":"269","text":"270"},["271"],"React Hook useEffect has missing dependencies: 'dispatch' and 'selectedUserDetails'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["272"],["273"],"no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},[351,365],"\"darkLoader\"",{"messageId":"276","fix":"277","desc":"278"},{"messageId":"279","fix":"280","desc":"281"},{"messageId":"276","fix":"282","desc":"278"},{"messageId":"279","fix":"283","desc":"281"},{"desc":"284","fix":"285"},{"desc":"274","fix":"286"},{"desc":"274","fix":"287"},[365,391],"\"darkActionBtnContainer\"",[782,803],"\"darkActionBtnText\"",{"desc":"288","fix":"289"},{"desc":"274","fix":"290"},[3731,3748],"\"unSeenMsgUser\"",[4483,4500],[7420,7445],"\"selectedBottomTabIcon\"",[7705,7730],{"desc":"274","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},[4091,4113],"\"myMessageAlignment\"",[4332,4345],"\"myMessage\"",[4428,4444],"\"theirMessage\"",{"desc":"274","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},"Update the dependencies array to be: [dispatch]",{"range":"303","text":"304"},"removeEscape",{"range":"305","text":"306"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"307","text":"308"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"309","text":"306"},{"range":"310","text":"308"},"Update the dependencies array to be: [snackBarCount, snackBarMsg, snackBarType]",{"range":"311","text":"312"},{"range":"313","text":"304"},{"range":"314","text":"304"},"Update the dependencies array to be: [btnClicked, isUserRegistered]",{"range":"315","text":"316"},{"range":"317","text":"304"},{"range":"318","text":"304"},"Update the dependencies array to be: [chatRoomId, dispatch, isSomeoneLoggedIn]",{"range":"319","text":"320"},"Update the dependencies array to be: [chatRoomId, dispatch, userTokenOfSecondUser]",{"range":"321","text":"322"},"Update the dependencies array to be: [chatRoomId, chatRoomMessages]",{"range":"323","text":"324"},{"range":"325","text":"304"},"Update the dependencies array to be: [dispatch, isSomeoneLoggedIn, selectedUserDetails]",{"range":"326","text":"327"},"Update the dependencies array to be: [chatRoomId, isANewChatRoomStarted]",{"range":"328","text":"329"},[420,422],"[dispatch]",[1867,1868],"",[1867,1867],"\\",[1892,1893],[1892,1892],[785,800],"[snackBarCount, snackBarMsg, snackBarType]",[888,890],[682,684],[1243,1261],"[btnClicked, isUserRegistered]",[1559,1561],[654,656],[823,842],"[chatRoomId, dispatch, isSomeoneLoggedIn]",[2737,2739],"[chatRoomId, dispatch, userTokenOfSecondUser]",[3003,3021],"[chatRoomId, chatRoomMessages]",[1133,1135],[1812,1831],"[dispatch, isSomeoneLoggedIn, selectedUserDetails]",[1962,1985],"[chatRoomId, isANewChatRoomStarted]"]