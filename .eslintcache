[{"/Users/mngos/Documents/MNgoChat3Web/src/index.js":"1","/Users/mngos/Documents/MNgoChat3Web/src/App.js":"2","/Users/mngos/Documents/MNgoChat3Web/src/Routes.js":"3","/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js":"4","/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js":"5","/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js":"6","/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js":"7","/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js":"8","/Users/mngos/Documents/MNgoChat3Web/src/utils.js":"9","/Users/mngos/Documents/MNgoChat3Web/src/constants.js":"10","/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js":"11","/Users/mngos/Documents/MNgoChat3Web/src/apis.js":"12","/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js":"13","/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js":"14","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBarWrapper.js":"15","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js":"16","/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js":"17","/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js":"18","/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js":"19","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js":"20","/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js":"21","/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js":"22","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js":"23","/Users/mngos/Documents/MNgoChat3Web/src/components/HomePageContent.js":"24","/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js":"25","/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js":"26","/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js":"27","/Users/mngos/Documents/MNgoChat3Web/src/components/ChatPageContent.js":"28","/Users/mngos/Documents/MNgoChat3Web/src/pages/NewChat.js":"29","/Users/mngos/Documents/MNgoChat3Web/src/encryptionConstants.js":"30","/Users/mngos/Documents/MNgoChat3Web/src/dayjs.js":"31"},{"size":176,"mtime":1611987774533,"results":"32","hashOfConfig":"33"},{"size":395,"mtime":1612004842265,"results":"34","hashOfConfig":"33"},{"size":928,"mtime":1612284772966,"results":"35","hashOfConfig":"33"},{"size":127,"mtime":1611987877261,"results":"36","hashOfConfig":"33"},{"size":229,"mtime":1611986021286,"results":"37","hashOfConfig":"33"},{"size":9399,"mtime":1612323592643,"results":"38","hashOfConfig":"33"},{"size":1092,"mtime":1612024932299,"results":"39","hashOfConfig":"33"},{"size":456,"mtime":1612272257813,"results":"40","hashOfConfig":"33"},{"size":3662,"mtime":1612322095837,"results":"41","hashOfConfig":"33"},{"size":1483,"mtime":1612323289329,"results":"42","hashOfConfig":"33"},{"size":7113,"mtime":1612273571058,"results":"43","hashOfConfig":"33"},{"size":1623,"mtime":1612029072017,"results":"44","hashOfConfig":"33"},{"size":575,"mtime":1612001849296,"results":"45","hashOfConfig":"33"},{"size":625,"mtime":1612001939665,"results":"46","hashOfConfig":"33"},{"size":3321,"mtime":1612186550410,"results":"47","hashOfConfig":"33"},{"size":577,"mtime":1612004483020,"results":"48","hashOfConfig":"33"},{"size":3916,"mtime":1612062014815,"results":"49","hashOfConfig":"33"},{"size":1838,"mtime":1612273727483,"results":"50","hashOfConfig":"33"},{"size":1008,"mtime":1612018737347,"results":"51","hashOfConfig":"33"},{"size":447,"mtime":1612008632632,"results":"52","hashOfConfig":"33"},{"size":1333,"mtime":1612021617383,"results":"53","hashOfConfig":"33"},{"size":6120,"mtime":1612066271225,"results":"54","hashOfConfig":"33"},{"size":1737,"mtime":1612273417184,"results":"55","hashOfConfig":"33"},{"size":6692,"mtime":1612321431664,"results":"56","hashOfConfig":"33"},{"size":7603,"mtime":1612323486583,"results":"57","hashOfConfig":"33"},{"size":539,"mtime":1612076140501,"results":"58","hashOfConfig":"33"},{"size":1843,"mtime":1612277366501,"results":"59","hashOfConfig":"33"},{"size":6748,"mtime":1612323285826,"results":"60","hashOfConfig":"33"},{"size":1575,"mtime":1612285014963,"results":"61","hashOfConfig":"33"},{"size":48,"mtime":1612319836974,"results":"62","hashOfConfig":"33"},{"size":96,"mtime":1612322829367,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1v2xoz5",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mngos/Documents/MNgoChat3Web/src/index.js",[],["136","137"],"/Users/mngos/Documents/MNgoChat3Web/src/App.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/Routes.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js",["138"],"import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\n\nimport { checkLoginStatusAction } from \"../redux/actions/index\";\n\nfunction Landing({\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    dispatch,\n}) {\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (isSomeoneLoggedIn) {\n                return <Redirect to=\"/home\" />;\n            } else {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Landing);","/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js",["139"],"import React from \"react\";\nimport cx from \"classnames\";\n\nimport loaderImg from '../images/loader.gif';\n\nexport default function LoadingAnimation({\n    dark,\n    loading,\n    className,\n}) {\n    return loading ? (\n        <center className={className}>\n            <img\n                alt=\"loading\"\n                className={cx(\"loadingAnimation\", { [\"darkLoader\"]: dark })}\n                src={loaderImg}\n            />\n        </center>\n    ) : null;\n}","/Users/mngos/Documents/MNgoChat3Web/src/utils.js",["140","141"],"/Users/mngos/Documents/MNgoChat3Web/src/constants.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/apis.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBarWrapper.js",["142"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport SnackBar from \"./SnackBar\";\n\nfunction SnackBarWrapper({\n    snackBarCount,\n    snackBarMsg,\n    snackBarType,\n\n    checkLoginStatusError,\n\n    loginUserError,\n\n    isUserRegistered,\n    registerUserError,\n\n    verifyPasscodeError,\n\n    getUserAllChatsError,\n\n    getAllUsersError,\n\n    getChatRoomDetailsError,\n\n    children,\n}) {\n    const [snackBarVisible, setSnackBarVisible] = useState(false);\n    const [snackBarMsgState, setSnackBarMsgState] = useState(\"\");\n    const [snackBarTypeState, setSnackBarTypeState] = useState(\"success\")\n\n    useEffect(() => {\n        if (snackBarMsg) {\n            makeSnackBar(snackBarMsg, snackBarType);\n        }\n    }, [snackBarCount]);\n\n    useEffect(() => {\n        if (checkLoginStatusError) {\n            makeSnackBar(checkLoginStatusError);\n        }\n    }, [checkLoginStatusError]);\n\n    useEffect(() => {\n        if (loginUserError) {\n            makeSnackBar(loginUserError);\n        }\n    }, [loginUserError]);\n\n    useEffect(() => {\n        if (registerUserError) {\n            makeSnackBar(registerUserError);\n        }\n    }, [registerUserError]);\n\n    useEffect(() => {\n        if (isUserRegistered) {\n            makeSnackBar(\"Successfully registered. Please login to continue\", \"success\");\n        }\n    }, [isUserRegistered]);\n\n    useEffect(() => {\n        if (verifyPasscodeError) {\n            makeSnackBar(verifyPasscodeError);\n        }\n    }, [verifyPasscodeError]);\n\n    useEffect(() => {\n        if (getUserAllChatsError) {\n            makeSnackBar(getUserAllChatsError);\n        }\n    }, [getUserAllChatsError]);\n\n    useEffect(() => {\n        if (getUserAllChatsError) {\n            makeSnackBar(getUserAllChatsError);\n        }\n    }, [getUserAllChatsError]);\n\n    useEffect(() => {\n        if (getAllUsersError) {\n            makeSnackBar(getAllUsersError);\n        }\n    }, [getAllUsersError]);\n\n    useEffect(() => {\n        if (getChatRoomDetailsError) {\n            makeSnackBar(getChatRoomDetailsError);\n        }\n    }, [getChatRoomDetailsError]);\n\n    function makeSnackBar(msg, type) {\n        setSnackBarMsgState(msg);\n        setSnackBarTypeState(type);\n        setSnackBarVisible(true);\n    }\n\n    function handleSnackBarClose() {\n        setSnackBarVisible(false);\n    }\n\n    return (\n        <>\n            {children}\n            <SnackBar\n                open={snackBarVisible}\n                msg={snackBarMsgState}\n                type={snackBarTypeState}\n                handleClose={handleSnackBarClose}\n            />\n        </>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        snackBarCount: state.snackBarCount,\n        snackBarMsg: state.snackBarMsg,\n        snackBarType: state.snackBarType,\n\n        checkLoginStatusError: state.checkLoginStatusError,\n\n        loginUserError: state.loginUserError,\n\n        isUserRegistered: state.isUserRegistered,\n        registerUserError: state.registerUserError,\n\n        verifyPasscodeError: state.verifyPasscodeError,\n\n        getUserAllChatsError: state.getUserAllChatsError,\n\n        getAllUsersError: state.getAllUsersError,\n\n        getChatRoomDetailsError: state.getChatRoomDetailsError,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(SnackBarWrapper);","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js",["143"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport logoImg from \"../images/logo.png\";\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport ActionButton from \"../components/ActionButton\";\nimport SignInUpButton from \"../components/SignInUpButton\";\n\nimport { PROJECT_NAME } from \"../constants\";\nimport {\n    showSnackBarAction,\n    checkLoginStatusAction,\n    loginUserAction\n} from \"../redux/actions/index\";\n\nfunction Login({\n    isLoggingUser,\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    history,\n    dispatch,\n}) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function handleLoginBtnClick(e) {\n        e.preventDefault();\n\n        if (isLoggingUser) {\n            return;\n        }\n\n        if (username !== \"\" && password !== \"\") {\n            dispatch(loginUserAction(username, password));\n        } else {\n            dispatch(showSnackBarAction(\"Please fill all the input fields\"));\n        }\n    }\n\n    function handleSignUpBtnClick() {\n        history.push(\"/register\");\n    }\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (isSomeoneLoggedIn) {\n                return <Redirect to=\"/home\" />;\n            } else {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n                    :\n                    <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                        <img\n                            className=\"logoImg\"\n                            alt=\"logoImg\"\n                            src={logoImg}\n                        />\n                        <div className=\"logoTitle\">{PROJECT_NAME}</div>\n\n                        <form className=\"formContainer\" onSubmit={handleLoginBtnClick}>\n                            <input\n                                type=\"text\"\n                                className=\"formInputField\"\n                                placeholder=\"Username\"\n                                autoFocus\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n\n                            <input\n                                type=\"password\"\n                                className=\"formInputField\"\n                                placeholder=\"Password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n\n                            <ActionButton\n                                dark={false}\n                                showLoader={isLoggingUser}\n                                buttonText=\"Login\"\n                                onClick={handleLoginBtnClick}\n                            />\n                        </form>\n\n                        <SignInUpButton\n                            otherText=\"Don't have an account yet?\"\n                            buttonText=\"Signup\"\n                            onClick={handleSignUpBtnClick}\n                        />\n                    </PurpleGradientContainer>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggingUser: state.isLoggingUser,\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Login);","/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js",["144"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport VerifyPasscode from \"../components/VerifyPasscode\";\nimport HomePageContent from \"../components/HomePageContent\";\n\nimport { checkLoginStatusAction } from \"../redux/actions/index\";\n\nfunction Home({\n    isPasscodeVerified,\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    history,\n    dispatch,\n}) {\n    isPasscodeVerified = true;\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (!isSomeoneLoggedIn) {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus || !isSomeoneLoggedIn ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n                    :\n                    <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                        {\n                            isPasscodeVerified ?\n                                <HomePageContent history={history} />\n                                :\n                                <VerifyPasscode />\n                        }\n                    </PurpleGradientContainer>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isPasscodeVerified: state.isPasscodeVerified,\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Home);","/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js",["145","146"],"import React from 'react';\nimport cx from \"classnames\";\n\nimport LoadingAnimation from \"./LoadingAnimation\";\n\nexport default function ActionButton({\n    dark,\n    className,\n    textclassName,\n    showLoader,\n    buttonText = \"Button\",\n    onClick,\n}) {\n    return (\n        <button\n            className={cx(\n                \"actionBtnContainer\",\n                { [\"darkActionBtnContainer\"]: dark },\n                className\n            )}\n            onClick={!showLoader ? onClick : null}\n        >\n            {\n                showLoader ?\n                    <LoadingAnimation dark={!dark} loading={showLoader} />\n                    :\n                    <div\n                        className={cx(\n                            \"actionBtnText\",\n                            { [\"darkActionBtnText\"]: dark },\n                            textclassName\n                        )}\n                    >\n                        {buttonText}\n                    </div>\n            }\n        </button>\n    );\n}","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js",["147"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport logoImg from \"../images/logo.png\";\nimport PurpleGradientContainer from \"../components/PurpleGradientContainer\";\nimport ActionButton from \"../components/ActionButton\";\n\nimport { PROJECT_NAME } from \"../constants\";\nimport {\n    validateUsername,\n    validateName,\n    validateEmail,\n    validateNumber,\n} from \"../utils\";\nimport { showSnackBarAction, registerUserAction } from \"../redux/actions/index\";\n\nfunction Register({\n    isRegisteringUser,\n    isUserRegistered,\n    dispatch,\n}) {\n    const [username, setUsername] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confPassword, setConfPassword] = useState(\"\");\n    const [passcode, setPasscode] = useState(\"\");\n    const [confPasscode, setConfPasscode] = useState(\"\");\n\n    const [redirectToLoginPage, setRedirectToLoginPage] = useState(false);\n    const [btnClicked, setBtnClicked] = useState(false);\n\n    useEffect(() => {\n        if (isUserRegistered && btnClicked) {\n            setRedirectToLoginPage(true);\n        }\n    }, [isUserRegistered]);\n\n    function handleRegisterBtnClick(e) {\n        e.preventDefault();\n\n        if (isRegisteringUser) {\n            return;\n        }\n\n        if (username !== \"\" && name !== \"\" && email !== \"\" && password !== \"\" && confPassword !== \"\" && passcode !== \"\" && confPasscode !== \"\") {\n            if (!validateUsername(username)) {\n                dispatch(showSnackBarAction(\"Username cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateName(name)) {\n                dispatch(showSnackBarAction(\"Name cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateEmail(email)) {\n                dispatch(showSnackBarAction(\"Invalid Email id format\"));\n                return;\n            }\n            if (password !== confPassword) {\n                dispatch(showSnackBarAction(\"Password do not match\"));\n                return;\n            }\n            if (!validateNumber(passcode)) {\n                dispatch(showSnackBarAction(\"Passcode must be a number\"));\n                return;\n            }\n            if (passcode.length !== 4) {\n                dispatch(showSnackBarAction(\"Passcode must be 4 digits long\"));\n                return;\n            }\n            if (passcode !== confPasscode) {\n                dispatch(showSnackBarAction(\"Passcode do not match\"));\n                return;\n            }\n\n            setBtnClicked(true);\n            dispatch(registerUserAction(username, name, email, password, passcode));\n        } else {\n            dispatch(showSnackBarAction(\"Please fill all the input fields\"));\n        }\n    }\n\n    return (\n        <>\n            {redirectToLoginPage ? <Redirect to=\"/login\" /> : null}\n\n            <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                <img\n                    className=\"logoImg\"\n                    alt=\"logoImg\"\n                    src={logoImg}\n                />\n                <div className=\"logoTitle\">{PROJECT_NAME}</div>\n\n                <form className=\"formContainer\" onSubmit={handleRegisterBtnClick}>\n                    <input\n                        type=\"text\"\n                        className=\"formInputField\"\n                        placeholder=\"Username\"\n                        autoFocus\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n\n                    <input\n                        type=\"text\"\n                        className=\"formInputField\"\n                        placeholder=\"Name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n\n                    <input\n                        type=\"email\"\n                        className=\"formInputField\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Confirm Password\"\n                        value={confPassword}\n                        onChange={(e) => setConfPassword(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Passcode\"\n                        value={passcode}\n                        maxLength={4}\n                        onChange={(e) => setPasscode(e.target.value)}\n                    />\n\n                    <input\n                        type=\"password\"\n                        className=\"formInputField\"\n                        placeholder=\"Confirm Passcode\"\n                        value={confPasscode}\n                        maxLength={4}\n                        onChange={(e) => setConfPasscode(e.target.value)}\n                    />\n\n                    <ActionButton\n                        dark={false}\n                        showLoader={isRegisteringUser}\n                        buttonText=\"Register\"\n                        onClick={handleRegisterBtnClick}\n                    />\n                </form>\n            </PurpleGradientContainer>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isRegisteringUser: state.isRegisteringUser,\n        isUserRegistered: state.isUserRegistered,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Register);","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/HomePageContent.js",["148","149","150","151","152","153","154","155"],"/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js",["156","157"],"import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport ChatPageContent from \"../components/ChatPageContent\";\n\nimport {\n    checkLoginStatusAction,\n    getChatRoomDetailsAction\n} from \"../redux/actions/index\";\n\nfunction Chat({\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    isGettingChatRoomDetails,\n    isChatRoomDetailsFetched,\n    match: {\n        params: {\n            chatRoomId,\n        } = {}\n    } = {},\n    dispatch,\n}) {\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    //to get chat room details\n    useEffect(() => {\n        if (isSomeoneLoggedIn) {\n            dispatch(getChatRoomDetailsAction(chatRoomId));\n        }\n    }, [isSomeoneLoggedIn]);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (!isSomeoneLoggedIn) {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus || (isGettingChatRoomDetails || !isChatRoomDetailsFetched) ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus || isGettingChatRoomDetails} />\n                    :\n                    <ChatPageContent dispatch={dispatch} chatRoomId={chatRoomId} />\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n        isGettingChatRoomDetails: state.isGettingChatRoomDetails,\n        isChatRoomDetailsFetched: state.isChatRoomDetailsFetched,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Chat);","/Users/mngos/Documents/MNgoChat3Web/src/components/ChatPageContent.js",["158","159","160","161","162","163","164","165","166"],"/Users/mngos/Documents/MNgoChat3Web/src/pages/NewChat.js",["167","168"],"import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LandingPageDesign from \"../components/LandingPageDesign\";\nimport ChatPageContent from \"../components/ChatPageContent\";\n\nimport {\n    checkLoginStatusAction,\n} from \"../redux/actions/index\";\n\nfunction NewChat({\n    isCheckingLoginStatus,\n    isSomeoneLoggedIn,\n    match: {\n        params: {\n            secondUserToken,\n        } = {}\n    } = {},\n    dispatch,\n}) {\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    //to get chat room details\n    useEffect(() => {\n        if (isSomeoneLoggedIn) {\n            // dispatch(getChatRoomDetailsAction(chatRoomId));\n        }\n    }, [isSomeoneLoggedIn]);\n\n    function redirectToHomeOrLoginPage() {\n        if (!isCheckingLoginStatus) {\n            if (!isSomeoneLoggedIn) {\n                return <Redirect to=\"/login\" />;\n            }\n        }\n    }\n\n    return (\n        <>\n            {redirectToHomeOrLoginPage()}\n\n            {\n                isCheckingLoginStatus ?\n                    <LandingPageDesign isCheckingLoginStatus={isCheckingLoginStatus} />\n                    :\n                    \"nice\"\n                // <ChatPageContent dispatch={dispatch} chatRoomId={chatRoomId} />\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(NewChat);","/Users/mngos/Documents/MNgoChat3Web/src/encryptionConstants.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/dayjs.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":16,"column":8,"nodeType":"175","endLine":16,"endColumn":10,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":15,"column":53,"nodeType":"179","messageId":"180","endLine":15,"endColumn":73,"fix":"181"},{"ruleId":"182","severity":1,"message":"183","line":75,"column":24,"nodeType":"184","messageId":"185","endLine":75,"endColumn":25,"suggestions":"186"},{"ruleId":"182","severity":1,"message":"183","line":75,"column":49,"nodeType":"184","messageId":"185","endLine":75,"endColumn":50,"suggestions":"187"},{"ruleId":"173","severity":1,"message":"188","line":36,"column":8,"nodeType":"175","endLine":36,"endColumn":23,"suggestions":"189"},{"ruleId":"173","severity":1,"message":"174","line":30,"column":8,"nodeType":"175","endLine":30,"endColumn":10,"suggestions":"190"},{"ruleId":"173","severity":1,"message":"174","line":22,"column":8,"nodeType":"175","endLine":22,"endColumn":10,"suggestions":"191"},{"ruleId":"177","severity":1,"message":"192","line":18,"column":19,"nodeType":"179","messageId":"180","endLine":18,"endColumn":51,"fix":"193"},{"ruleId":"177","severity":1,"message":"194","line":30,"column":31,"nodeType":"179","messageId":"180","endLine":30,"endColumn":58,"fix":"195"},{"ruleId":"173","severity":1,"message":"196","line":38,"column":8,"nodeType":"175","endLine":38,"endColumn":26,"suggestions":"197"},{"ruleId":"173","severity":1,"message":"198","line":51,"column":8,"nodeType":"175","endLine":51,"endColumn":10,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":76,"column":39,"nodeType":"202","messageId":"203","endLine":76,"endColumn":46},{"ruleId":"177","severity":1,"message":"204","line":80,"column":53,"nodeType":"179","messageId":"180","endLine":80,"endColumn":90,"fix":"205"},{"ruleId":"200","severity":1,"message":"201","line":93,"column":39,"nodeType":"202","messageId":"203","endLine":93,"endColumn":46},{"ruleId":"177","severity":1,"message":"204","line":97,"column":53,"nodeType":"179","messageId":"180","endLine":97,"endColumn":90,"fix":"206"},{"ruleId":"200","severity":1,"message":"207","line":131,"column":67,"nodeType":"208","messageId":"209","endLine":131,"endColumn":75},{"ruleId":"177","severity":1,"message":"210","line":162,"column":55,"nodeType":"179","messageId":"180","endLine":162,"endColumn":103,"fix":"211"},{"ruleId":"177","severity":1,"message":"210","line":169,"column":55,"nodeType":"179","messageId":"180","endLine":169,"endColumn":103,"fix":"212"},{"ruleId":"173","severity":1,"message":"174","line":27,"column":8,"nodeType":"175","endLine":27,"endColumn":10,"suggestions":"213"},{"ruleId":"173","severity":1,"message":"214","line":34,"column":8,"nodeType":"175","endLine":34,"endColumn":27,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":10,"column":8,"nodeType":"218","messageId":"219","endLine":10,"endColumn":24},{"ruleId":"173","severity":1,"message":"220","line":64,"column":8,"nodeType":"175","endLine":64,"endColumn":10,"suggestions":"221"},{"ruleId":"173","severity":1,"message":"222","line":73,"column":8,"nodeType":"175","endLine":73,"endColumn":26,"suggestions":"223"},{"ruleId":"200","severity":1,"message":"207","line":88,"column":47,"nodeType":"208","messageId":"209","endLine":88,"endColumn":55},{"ruleId":"200","severity":1,"message":"201","line":89,"column":42,"nodeType":"202","messageId":"203","endLine":89,"endColumn":49},{"ruleId":"200","severity":1,"message":"201","line":95,"column":49,"nodeType":"202","messageId":"203","endLine":95,"endColumn":56},{"ruleId":"177","severity":1,"message":"224","line":106,"column":35,"nodeType":"179","messageId":"180","endLine":106,"endColumn":98,"fix":"225"},{"ruleId":"177","severity":1,"message":"226","line":111,"column":39,"nodeType":"179","messageId":"180","endLine":111,"endColumn":93,"fix":"227"},{"ruleId":"177","severity":1,"message":"228","line":112,"column":39,"nodeType":"179","messageId":"180","endLine":112,"endColumn":96,"fix":"229"},{"ruleId":"216","severity":1,"message":"230","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":24,"column":8,"nodeType":"175","endLine":24,"endColumn":10,"suggestions":"231"},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["234"],"no-useless-computed-key","Unnecessarily computed property [\"darkLoader\"] found.","Property","unnecessarilyComputedProperty",{"range":"235","text":"236"},"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["237","238"],["239","240"],"React Hook useEffect has missing dependencies: 'snackBarMsg' and 'snackBarType'. Either include them or remove the dependency array.",["241"],["242"],["243"],"Unnecessarily computed property [\"darkActionBtnContainer\"] found.",{"range":"244","text":"245"},"Unnecessarily computed property [\"darkActionBtnText\"] found.",{"range":"246","text":"247"},"React Hook useEffect has a missing dependency: 'btnClicked'. Either include it or remove the dependency array.",["248"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["249"],"array-callback-return","Array.prototype.map() expects a return value from function.","ReturnStatement","expectedReturnValue","Unnecessarily computed property [\"unSeenMsgUser\"] found.",{"range":"250","text":"251"},{"range":"252","text":"251"},"Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","Unnecessarily computed property [\"selectedBottomTabIcon\"] found.",{"range":"253","text":"254"},{"range":"255","text":"254"},["256"],"React Hook useEffect has missing dependencies: 'chatRoomId' and 'dispatch'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["257"],"no-unused-vars","'LoadingAnimation' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'chatRoomId', 'dispatch', and 'userTokenOfSecondUser'. Either include them or remove the dependency array.",["258"],"React Hook useEffect has a missing dependency: 'chatRoomId'. Either include it or remove the dependency array.",["259"],"Unnecessarily computed property [\"myMessageAlignment\"] found.",{"range":"260","text":"261"},"Unnecessarily computed property [\"myMessage\"] found.",{"range":"262","text":"263"},"Unnecessarily computed property [\"theirMessage\"] found.",{"range":"264","text":"265"},"'ChatPageContent' is defined but never used.",["266"],"no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},[351,365],"\"darkLoader\"",{"messageId":"269","fix":"270","desc":"271"},{"messageId":"272","fix":"273","desc":"274"},{"messageId":"269","fix":"275","desc":"271"},{"messageId":"272","fix":"276","desc":"274"},{"desc":"277","fix":"278"},{"desc":"267","fix":"279"},{"desc":"267","fix":"280"},[365,391],"\"darkActionBtnContainer\"",[782,803],"\"darkActionBtnText\"",{"desc":"281","fix":"282"},{"desc":"267","fix":"283"},[2375,2392],"\"unSeenMsgUser\"",[3004,3021],[5795,5820],"\"selectedBottomTabIcon\"",[6080,6105],{"desc":"267","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},[3587,3609],"\"myMessageAlignment\"",[3828,3841],"\"myMessage\"",[3924,3940],"\"theirMessage\"",{"desc":"267","fix":"291"},"Update the dependencies array to be: [dispatch]",{"range":"292","text":"293"},"removeEscape",{"range":"294","text":"295"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"296","text":"297"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"298","text":"295"},{"range":"299","text":"297"},"Update the dependencies array to be: [snackBarCount, snackBarMsg, snackBarType]",{"range":"300","text":"301"},{"range":"302","text":"293"},{"range":"303","text":"293"},"Update the dependencies array to be: [btnClicked, isUserRegistered]",{"range":"304","text":"305"},{"range":"306","text":"293"},{"range":"307","text":"293"},"Update the dependencies array to be: [chatRoomId, dispatch, isSomeoneLoggedIn]",{"range":"308","text":"309"},"Update the dependencies array to be: [chatRoomId, dispatch, userTokenOfSecondUser]",{"range":"310","text":"311"},"Update the dependencies array to be: [chatRoomId, chatRoomMessages]",{"range":"312","text":"313"},{"range":"314","text":"293"},[420,422],"[dispatch]",[1867,1868],"",[1867,1867],"\\",[1892,1893],[1892,1892],[757,772],"[snackBarCount, snackBarMsg, snackBarType]",[888,890],[682,684],[1243,1261],"[btnClicked, isUserRegistered]",[1421,1423],[654,656],[823,842],"[chatRoomId, dispatch, isSomeoneLoggedIn]",[2233,2235],"[chatRoomId, dispatch, userTokenOfSecondUser]",[2499,2517],"[chatRoomId, chatRoomMessages]",[573,575]]