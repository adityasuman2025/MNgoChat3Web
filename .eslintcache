[{"/Users/mngos/Documents/MNgoChat3Web/src/index.js":"1","/Users/mngos/Documents/MNgoChat3Web/src/App.js":"2","/Users/mngos/Documents/MNgoChat3Web/src/Routes.js":"3","/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js":"4","/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js":"5","/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js":"6","/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js":"7","/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js":"8","/Users/mngos/Documents/MNgoChat3Web/src/utils.js":"9","/Users/mngos/Documents/MNgoChat3Web/src/constants.js":"10","/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js":"11","/Users/mngos/Documents/MNgoChat3Web/src/apis.js":"12","/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js":"13","/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js":"14","/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js":"15","/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js":"16","/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js":"17","/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js":"18","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js":"19","/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js":"20","/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js":"21","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js":"22","/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js":"23","/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js":"24","/Users/mngos/Documents/MNgoChat3Web/src/pages/NewChat.js":"25","/Users/mngos/Documents/MNgoChat3Web/src/dayjs.js":"26","/Users/mngos/Documents/MNgoChat3Web/src/components/ImageViewer.js":"27","/Users/mngos/Documents/MNgoChat3Web/src/components/ImageWithLoader.js":"28","/Users/mngos/Documents/MNgoChat3Web/src/components/OfflineModal.js":"29","/Users/mngos/Documents/MNgoChat3Web/src/RootWrapper.js":"30","/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js":"31","/Users/mngos/Documents/MNgoChat3Web/src/encryptionConstants.js":"32","/Users/mngos/Documents/MNgoChat3Web/src/components/Home/HomePageContent.js":"33","/Users/mngos/Documents/MNgoChat3Web/src/components/Home/HomeBottomNav.js":"34","/Users/mngos/Documents/MNgoChat3Web/src/components/Home/UserListItem.js":"35","/Users/mngos/Documents/MNgoChat3Web/src/components/Home/HomeProfileTab.js":"36","/Users/mngos/Documents/MNgoChat3Web/src/components/Chat/ChatPageContent.js":"37","/Users/mngos/Documents/MNgoChat3Web/src/components/Chat/ChatTitleBar.js":"38","/Users/mngos/Documents/MNgoChat3Web/src/components/Chat/ChatMessageItem.js":"39","/Users/mngos/Documents/MNgoChat3Web/src/components/Chat/ChatBottomBar.js":"40"},{"size":176,"mtime":1622429398579,"results":"41","hashOfConfig":"42"},{"size":367,"mtime":1622429398572,"results":"43","hashOfConfig":"42"},{"size":1680,"mtime":1622449561368,"results":"44","hashOfConfig":"42"},{"size":127,"mtime":1622429398580,"results":"45","hashOfConfig":"42"},{"size":229,"mtime":1622429398582,"results":"46","hashOfConfig":"42"},{"size":12839,"mtime":1622465085959,"results":"47","hashOfConfig":"42"},{"size":554,"mtime":1622429398580,"results":"48","hashOfConfig":"42"},{"size":494,"mtime":1622429398574,"results":"49","hashOfConfig":"42"},{"size":3562,"mtime":1622453238602,"results":"50","hashOfConfig":"42"},{"size":3301,"mtime":1622461062039,"results":"51","hashOfConfig":"42"},{"size":8661,"mtime":1622465345329,"results":"52","hashOfConfig":"42"},{"size":1234,"mtime":1622429398573,"results":"53","hashOfConfig":"42"},{"size":510,"mtime":1622432852560,"results":"54","hashOfConfig":"42"},{"size":546,"mtime":1622433124846,"results":"55","hashOfConfig":"42"},{"size":997,"mtime":1622429398575,"results":"56","hashOfConfig":"42"},{"size":2720,"mtime":1622429398580,"results":"57","hashOfConfig":"42"},{"size":872,"mtime":1622453404090,"results":"58","hashOfConfig":"42"},{"size":1008,"mtime":1622429398573,"results":"59","hashOfConfig":"42"},{"size":447,"mtime":1622429398574,"results":"60","hashOfConfig":"42"},{"size":1302,"mtime":1622452748915,"results":"61","hashOfConfig":"42"},{"size":5671,"mtime":1622429398581,"results":"62","hashOfConfig":"42"},{"size":1737,"mtime":1622429398575,"results":"63","hashOfConfig":"42"},{"size":16260,"mtime":1622454194521,"results":"64","hashOfConfig":"42"},{"size":1923,"mtime":1622464957529,"results":"65","hashOfConfig":"42"},{"size":4317,"mtime":1622454759934,"results":"66","hashOfConfig":"42"},{"size":96,"mtime":1622429398575,"results":"67","hashOfConfig":"42"},{"size":692,"mtime":1622464302187,"results":"68","hashOfConfig":"42"},{"size":868,"mtime":1622464280095,"results":"69","hashOfConfig":"42"},{"size":400,"mtime":1622429398574,"results":"70","hashOfConfig":"42"},{"size":4837,"mtime":1622452736810,"results":"71","hashOfConfig":"42"},{"size":539,"mtime":1622430226855,"results":"72","hashOfConfig":"42"},{"size":48,"mtime":1622430232036,"results":"73","hashOfConfig":"42"},{"size":9404,"mtime":1622465338035,"results":"74","hashOfConfig":"42"},{"size":1549,"mtime":1622460449420,"results":"75","hashOfConfig":"42"},{"size":1161,"mtime":1622457172885,"results":"76","hashOfConfig":"42"},{"size":3074,"mtime":1622450514396,"results":"77","hashOfConfig":"42"},{"size":10071,"mtime":1622465214028,"results":"78","hashOfConfig":"42"},{"size":1114,"mtime":1622460820764,"results":"79","hashOfConfig":"42"},{"size":4672,"mtime":1622459352660,"results":"80","hashOfConfig":"42"},{"size":6946,"mtime":1622464613770,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"138is8u",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"122","usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"171","usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mngos/Documents/MNgoChat3Web/src/index.js",[],["174","175"],"/Users/mngos/Documents/MNgoChat3Web/src/App.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/Routes.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/NotFound.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/store.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/reducers/rootReducer.js",["176"],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Landing.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/LoadingAnimation.js",["177"],"import React from \"react\";\nimport cx from \"classnames\";\n\nimport loaderImg from '../images/loader.gif';\n\nexport default function LoadingAnimation({\n    dark,\n    loading,\n    className,\n    loaderClassName,\n}) {\n    return loading ? (\n        <center className={className}>\n            <img\n                alt=\"loading\"\n                className={cx(\"loadingAnimation\", { [\"darkLoader\"]: dark }, loaderClassName)}\n                src={loaderImg}\n            />\n        </center>\n    ) : null;\n}","/Users/mngos/Documents/MNgoChat3Web/src/utils.js",["178","179"],"import { enc, AES } from \"crypto-js\";\nimport { Redirect } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\n\nimport { ENCRYPTION_KEY } from \"./encryptionConstants\";\nimport { COOKIE_EXPIRATION_TIME, LOGGED_USER_TOKEN_COOKIE_NAME, AUTH_API_URL_ADDRESS, NO_INTERNET_ERROR } from \"./constants\";\nconst cookies = new Cookies();\n\nexport function getCookieValue(cookie_name) {\n    let value = null;\n    try {\n        const cookieValue = cookies.get(cookie_name);\n        if (cookieValue) {\n            value = cookieValue;\n        }\n    } catch {\n        value = null;\n    }\n\n    return value;\n}\n\nexport function makeCookie(key, value) {\n    try {\n        cookies.set(key, value, { path: \"/\", expires: COOKIE_EXPIRATION_TIME, });\n\n        return true;\n    } catch {\n        return false;\n    }\n}\n\nexport function encryptText(text) {\n    try {\n        const encryptedValue = AES.encrypt(text, ENCRYPTION_KEY).toString();\n        return encryptedValue;\n    } catch {\n        return null;\n    }\n}\n\nexport function decryptText(enryptedValue) {\n    let value = null;\n    try {\n        const decrypted = AES.decrypt(enryptedValue, ENCRYPTION_KEY);\n        value = enc.Utf8.stringify(decrypted);\n    } catch {\n        return null;\n    }\n\n    return value;\n}\n\nexport async function sendRequestToAPI(endpoint, body) {\n    try {\n        const requestAddress = AUTH_API_URL_ADDRESS + endpoint;\n        const response = await fetch(requestAddress, {\n            method: \"post\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        });\n        return await response.json();\n    } catch {\n        return NO_INTERNET_ERROR;\n    }\n}\n\nexport function validateUsername(name) {\n    var re = /^[a-zA-Z0-9_]*$/;\n    return re.test(name);\n}\n\nexport function validateName(name) {\n    var re = /^[a-zA-Z0-9 ]*$/;\n    return re.test(name);\n}\n\nexport function validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nexport function validateNumber(number) {\n    var re = /^[0-9]*$/;\n    return re.test(number);\n}\n\nexport function getLoggedUserToken() {\n    return getCookieValue(LOGGED_USER_TOKEN_COOKIE_NAME);\n}\n\nexport function isEmpty(obj) {\n\n    // null and undefined are \"empty\"\n    if (obj == null) return true;\n\n    // Assume if it has a length property with a non-zero value\n    // that that property is correct.\n    if (obj.length > 0) return false;\n    if (obj.length === 0) return true;\n\n    // If it isn't an object at this point\n    // it is empty, but it can't be anything *but* empty\n    // Is it empty?  Depends on your application.\n    if (typeof obj !== \"object\") return true;\n\n    // Otherwise, does it have any properties of its own?\n    // Note that this doesn't handle\n    // toString and valueOf enumeration bugs in IE < 9\n    for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) return false;\n    }\n\n    return true;\n}\n\nexport function redirectToHomeOrLoginPage(isCheckingLoginStatus, isSomeoneLoggedIn) {\n    if (!isCheckingLoginStatus) {\n        if (isSomeoneLoggedIn) {\n            return <Redirect to=\"/home\" />;\n        } else {\n            return <Redirect to=\"/login\" />;\n        }\n    }\n}\n\nexport function redirectToLoginPage() {\n    return <Redirect to=\"/login\" />;\n}\n\nexport async function logout(dispatch) {\n    await cookies.remove(LOGGED_USER_TOKEN_COOKIE_NAME, { path: \"/\", expires: COOKIE_EXPIRATION_TIME });\n};","/Users/mngos/Documents/MNgoChat3Web/src/constants.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/redux/actions/index.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/apis.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/PurpleGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/GreyGradientContainer.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/SnackBar.js",["180"],"import React, { useEffect } from \"react\";\nimport cx from \"classnames\";\n\nexport default function SnackBar({\n    open,\n    duration = 5000,\n    type = \"error\",\n    msg,\n    boxclassName,\n    textclassName,\n    handleClose,\n}) {\n    useEffect(() => {\n        setTimeout(function() {\n            console.log(\"hiding snack bar in 5 s\");\n            handleClose();\n        }, duration);\n    }, [msg])\n\n    function renderTypeStyle(type) {\n        if (type === \"error\") {\n            return \"errorBox\";\n        } else if (type === \"success\") {\n            return \"successBox\";\n        } else if (type === \"info\") {\n            return \"infoBox\";\n        }\n\n        return \"\";\n    }\n\n    return (\n        open ?\n            <div className=\"snackBarContainer\">\n                <div className={cx(\"snackBarContent\", renderTypeStyle(type), boxclassName)}>\n                    <span className={cx(\"snackBarText\", textclassName)}>{msg}</span>\n                </div>\n            </div>\n            : null\n    )\n}","/Users/mngos/Documents/MNgoChat3Web/src/pages/Login.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Home.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/ActionButton.js",["181","182"],"import React from 'react';\nimport cx from \"classnames\";\n\nimport LoadingAnimation from \"./LoadingAnimation\";\n\nexport default function ActionButton({\n    dark,\n    className,\n    textclassName,\n    showLoader,\n    buttonText = \"Button\",\n    onClick,\n}) {\n    return (\n        <button\n            className={cx(\n                \"actionBtnContainer\",\n                { [\"darkActionBtnContainer\"]: dark },\n                className\n            )}\n            onClick={!showLoader ? onClick : null}\n        >\n            {\n                showLoader ?\n                    <LoadingAnimation dark={!dark} loading={showLoader} />\n                    :\n                    <div\n                        className={cx(\n                            \"actionBtnText\",\n                            { [\"darkActionBtnText\"]: dark },\n                            textclassName\n                        )}\n                    >\n                        {buttonText}\n                    </div>\n            }\n        </button>\n    );\n}","/Users/mngos/Documents/MNgoChat3Web/src/components/SignInUpButton.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/LandingPageDesign.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Register.js",["183"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport logoImg from \"../images/logo.png\";\nimport ActionButton from \"../components/ActionButton\";\n\nimport { PROJECT_NAME } from \"../constants\";\nimport {\n    validateUsername,\n    validateName,\n    validateEmail,\n    validateNumber,\n} from \"../utils\";\nimport { showSnackBarAction, registerUserAction } from \"../redux/actions/index\";\n\nfunction Register({\n    isRegisteringUser,\n    isUserRegistered,\n    dispatch,\n}) {\n    const [username, setUsername] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confPassword, setConfPassword] = useState(\"\");\n    const [passcode, setPasscode] = useState(\"\");\n    const [confPasscode, setConfPasscode] = useState(\"\");\n\n    const [redirectToLoginPage, setRedirectToLoginPage] = useState(false);\n    const [btnClicked, setBtnClicked] = useState(false);\n\n    useEffect(() => {\n        if (isUserRegistered && btnClicked) {\n            setRedirectToLoginPage(true);\n        }\n    }, [isUserRegistered]);\n\n    function handleRegisterBtnClick(e) {\n        e.preventDefault();\n\n        if (isRegisteringUser) {\n            return;\n        }\n\n        if (username !== \"\" && name !== \"\" && email !== \"\" && password !== \"\" && confPassword !== \"\" && passcode !== \"\" && confPasscode !== \"\") {\n            if (!validateUsername(username)) {\n                dispatch(showSnackBarAction(\"Username cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateName(name)) {\n                dispatch(showSnackBarAction(\"Name cannot contain symbol and spaces\"));\n                return;\n            }\n            if (!validateEmail(email)) {\n                dispatch(showSnackBarAction(\"Invalid Email id format\"));\n                return;\n            }\n            if (password !== confPassword) {\n                dispatch(showSnackBarAction(\"Password do not match\"));\n                return;\n            }\n            if (!validateNumber(passcode)) {\n                dispatch(showSnackBarAction(\"Passcode must be a number\"));\n                return;\n            }\n            if (passcode.length !== 4) {\n                dispatch(showSnackBarAction(\"Passcode must be 4 digits long\"));\n                return;\n            }\n            if (passcode !== confPasscode) {\n                dispatch(showSnackBarAction(\"Passcode do not match\"));\n                return;\n            }\n\n            setBtnClicked(true);\n            dispatch(registerUserAction(username, name, email, password, passcode));\n        } else {\n            dispatch(showSnackBarAction(\"Please fill all the input fields\"));\n        }\n    }\n\n    return (\n        <>\n            {redirectToLoginPage ? <Redirect to=\"/login\" /> : null}\n\n            <img\n                className=\"logoImg\"\n                alt=\"logoImg\"\n                src={logoImg}\n            />\n            <div className=\"logoTitle\">{PROJECT_NAME}</div>\n\n            <form className=\"formContainer\" onSubmit={handleRegisterBtnClick}>\n                <input\n                    type=\"text\"\n                    className=\"formInputField\"\n                    placeholder=\"Username\"\n                    autoFocus\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n\n                <input\n                    type=\"text\"\n                    className=\"formInputField\"\n                    placeholder=\"Name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n\n                <input\n                    type=\"email\"\n                    className=\"formInputField\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n\n                <input\n                    type=\"password\"\n                    className=\"formInputField\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n\n                <input\n                    type=\"password\"\n                    className=\"formInputField\"\n                    placeholder=\"Confirm Password\"\n                    value={confPassword}\n                    onChange={(e) => setConfPassword(e.target.value)}\n                />\n\n                <input\n                    type=\"password\"\n                    className=\"formInputField\"\n                    placeholder=\"Passcode\"\n                    value={passcode}\n                    maxLength={4}\n                    onChange={(e) => setPasscode(e.target.value)}\n                />\n\n                <input\n                    type=\"password\"\n                    className=\"formInputField\"\n                    placeholder=\"Confirm Passcode\"\n                    value={confPasscode}\n                    maxLength={4}\n                    onChange={(e) => setConfPasscode(e.target.value)}\n                />\n\n                <ActionButton\n                    dark={false}\n                    showLoader={isRegisteringUser}\n                    buttonText=\"Register\"\n                    onClick={handleRegisterBtnClick}\n                />\n            </form>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isRegisteringUser: state.isRegisteringUser,\n        isUserRegistered: state.isUserRegistered,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(Register);","/Users/mngos/Documents/MNgoChat3Web/src/components/VerifyPasscode.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/firebaseQueries.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/pages/Chat.js",["184"],"/Users/mngos/Documents/MNgoChat3Web/src/pages/NewChat.js",["185","186"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport LoadingAnimation from \"../components/LoadingAnimation\";\nimport ActionButton from \"../components/ActionButton\";\nimport ImageViewer from \"../components/ImageViewer\";\nimport ChatTitleBar from \"../components/Chat/ChatTitleBar\";\nimport { BOTTOM_NAV_HEIGHT } from \"../constants\";\nimport { showSnackBarAction } from \"../redux/actions/index\";\nimport { startANewChatRoom } from \"../firebaseQueries\";\nimport { redirectToLoginPage, encryptText, decryptText } from \"../utils\";\n\nfunction NewChat({\n    isSomeoneLoggedIn,\n    isStartingANewChatRoom,\n    isANewChatRoomStarted,\n    newChatRoomDetails: {\n        chatRoomId,\n    },\n    userDetails: {\n        username: loggedUsername\n    } = {},\n    dispatch,\n}) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [selectedUserDetails, setSelectedUserDetails] = useState({});\n\n    const [redirectToChat, setRedirectToChat] = useState(false);\n    const [viewImg, setViewImg] = useState(null);\n\n    useEffect(() => {\n        try {\n            const fullUrl = (window.location.href).split(\"new-chat/\");\n            const encryptedSelectedUserDetails = fullUrl[1];\n            const urlUserDetails = JSON.parse(decryptText(encryptedSelectedUserDetails));\n            if (urlUserDetails.token && urlUserDetails.name) {\n                setSelectedUserDetails(urlUserDetails);\n                setIsLoading(false);\n            } else {\n                dispatch(showSnackBarAction(\"Invalid user selected\"));\n            }\n        } catch (e) {\n            dispatch(showSnackBarAction(\"Invalid user selected\"));\n        }\n    }, []);\n\n    useEffect(() => {\n        if (isANewChatRoomStarted && chatRoomId) {\n            const userDetails = selectedUserDetails;\n            userDetails.chatRoomId = chatRoomId;\n            setSelectedUserDetails(userDetails);\n            setRedirectToChat(true);\n        }\n    }, [isANewChatRoomStarted]);\n\n    function handleStartBtnClick() {\n        startANewChatRoom({ dispatch, loggedUsername, secondUserToken: selectedUserDetails.token, secondUsername: selectedUserDetails.name });\n    }\n\n    function handleImageClick(event, src) {\n        event.stopPropagation(); //to prevent trigger of parent onClick\n\n        if (src) {\n            setViewImg(src);\n        }\n    }\n\n    return (\n        <>\n            {!isSomeoneLoggedIn ? redirectToLoginPage() : null}\n            {redirectToChat ? <Redirect to={\"/chat/\" + encryptText(JSON.stringify(selectedUserDetails))} /> : null}\n\n            {viewImg ? <ImageViewer src={viewImg} onClose={() => setViewImg(null)} /> : null}\n\n            {\n                isLoading ? <LoadingAnimation dark loading />\n                    :\n                    <div className=\"homeContainer\">\n                        <div\n                            className=\"chatWindow\"\n                            style={{ \"--actionBoxHeight\": BOTTOM_NAV_HEIGHT }}\n                        >\n                            <ChatTitleBar\n                                name={selectedUserDetails.name}\n                                profileImg={selectedUserDetails.profileImg}\n                                onImageClick={handleImageClick}\n                            />\n                        </div>\n                        <div\n                            className=\"chatBottomNavContainer\"\n                            style={{ \"--actionBoxHeight\": BOTTOM_NAV_HEIGHT }}\n                        >\n                            <ActionButton\n                                dark={false}\n                                showLoader={isStartingANewChatRoom}\n                                buttonText=\"Start Chat\"\n                                onClick={handleStartBtnClick}\n                            />\n                        </div>\n                    </div>\n            }\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isSomeoneLoggedIn: state.isSomeoneLoggedIn,\n        isStartingANewChatRoom: state.isStartingANewChatRoom,\n        isANewChatRoomStarted: state.isANewChatRoomStarted,\n        newChatRoomDetails: state.newChatRoomDetails,\n        userDetails: state.userDetails,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(NewChat);","/Users/mngos/Documents/MNgoChat3Web/src/dayjs.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/ImageViewer.js",["187","188"],"/Users/mngos/Documents/MNgoChat3Web/src/components/ImageWithLoader.js",["189"],"/Users/mngos/Documents/MNgoChat3Web/src/components/OfflineModal.js",["190"],"import React from 'react';\n\nimport warningImg from \"../images/warning.png\";\n\nexport default function OfflineModal() {\n    return (\n        <div className=\"warningModal\">\n            <div className=\"imageViewerBg\" />\n            <img src={warningImg} className=\"imageViewerImg\" />\n            <br />\n            <div className=\"redTitle\">You are not connected to internet</div>\n        </div>\n    );\n}","/Users/mngos/Documents/MNgoChat3Web/src/RootWrapper.js",["191","192"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport SnackBar from \"./components/SnackBar\";\nimport OfflineModal from \"./components/OfflineModal\";\nimport PurpleGradientContainer from \"./components/PurpleGradientContainer\";\nimport LandingPageDesign from \"./components/LandingPageDesign\";\n\nimport { checkLoginStatusAction } from \"./redux/actions/index\";\n\nfunction RootWrapper({\n    isCheckingLoginStatus,\n\n    snackBarCount,\n    snackBarMsg,\n    snackBarType,\n\n    checkLoginStatusError,\n    loginUserError,\n\n    isUserRegistered,\n    registerUserError,\n\n    verifyPasscodeError,\n    getUserAllChatsError,\n    getAllUsersError,\n    startNewChatRoomError,\n    uploadImageError,\n\n    children,\n\n    dispatch,\n}) {\n    const [showOfflineWarning, setShowOffLineWarning] = useState(false);\n    const [snackBarVisible, setSnackBarVisible] = useState(false);\n    const [snackBarMsgState, setSnackBarMsgState] = useState(\"\");\n    const [snackBarTypeState, setSnackBarTypeState] = useState(\"success\")\n\n    useEffect(() => {\n        window.addEventListener('offline', function(e) {\n            setShowOffLineWarning(true);\n        });\n\n        window.addEventListener('online', function(e) {\n            setShowOffLineWarning(false);\n        });\n    }, []);\n\n    useEffect(() => {\n        dispatch(checkLoginStatusAction());\n    }, []);\n\n    useEffect(() => {\n        if (snackBarMsg) {\n            makeSnackBar(snackBarMsg, snackBarType);\n        }\n    }, [snackBarCount]);\n\n    useEffect(() => {\n        if (checkLoginStatusError) {\n            makeSnackBar(checkLoginStatusError);\n        }\n    }, [checkLoginStatusError]);\n\n    useEffect(() => {\n        if (loginUserError) {\n            makeSnackBar(loginUserError);\n        }\n    }, [loginUserError]);\n\n    useEffect(() => {\n        if (registerUserError) {\n            makeSnackBar(registerUserError);\n        }\n    }, [registerUserError]);\n\n    useEffect(() => {\n        if (isUserRegistered) {\n            makeSnackBar(\"Successfully registered. Please login to continue\", \"success\");\n        }\n    }, [isUserRegistered]);\n\n    useEffect(() => {\n        if (verifyPasscodeError) {\n            makeSnackBar(verifyPasscodeError);\n        }\n    }, [verifyPasscodeError]);\n\n    useEffect(() => {\n        if (getUserAllChatsError) {\n            makeSnackBar(getUserAllChatsError);\n        }\n    }, [getUserAllChatsError]);\n\n    useEffect(() => {\n        if (getUserAllChatsError) {\n            makeSnackBar(getUserAllChatsError);\n        }\n    }, [getUserAllChatsError]);\n\n    useEffect(() => {\n        if (getAllUsersError) {\n            makeSnackBar(getAllUsersError);\n        }\n    }, [getAllUsersError]);\n\n    useEffect(() => {\n        if (startNewChatRoomError) {\n            makeSnackBar(startNewChatRoomError);\n        }\n    }, [startNewChatRoomError]);\n\n    useEffect(() => {\n        if (uploadImageError) {\n            makeSnackBar(uploadImageError);\n        }\n    }, [uploadImageError]);\n\n    function makeSnackBar(msg, type) {\n        setSnackBarMsgState(msg);\n        setSnackBarTypeState(type);\n        setSnackBarVisible(true);\n    }\n\n    function handleSnackBarClose() {\n        setSnackBarVisible(false);\n    }\n\n    return (\n        <>\n            {\n                showOfflineWarning ?\n                    <OfflineModal />\n                    : null\n            }\n\n            {\n                isCheckingLoginStatus ?\n                    <LandingPageDesign isLoading={true} />\n                    :\n                    <PurpleGradientContainer childrenClassName=\"flexCenter\">\n                        {children}\n                    </PurpleGradientContainer>\n            }\n\n            {\n                snackBarVisible ?\n                    <SnackBar\n                        open={snackBarVisible}\n                        msg={snackBarMsgState}\n                        type={snackBarTypeState}\n                        handleClose={handleSnackBarClose}\n                    />\n                    : null\n            }\n\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isCheckingLoginStatus: state.isCheckingLoginStatus,\n\n        snackBarCount: state.snackBarCount,\n        snackBarMsg: state.snackBarMsg,\n        snackBarType: state.snackBarType,\n\n        checkLoginStatusError: state.checkLoginStatusError,\n        loginUserError: state.loginUserError,\n\n        isUserRegistered: state.isUserRegistered,\n        registerUserError: state.registerUserError,\n\n        verifyPasscodeError: state.verifyPasscodeError,\n        getUserAllChatsError: state.getUserAllChatsError,\n        getAllUsersError: state.getAllUsersError,\n        startNewChatRoomError: state.startNewChatRoomError,\n        uploadImageError: state.uploadImageError,\n    }\n}\n\nexport default connect(mapStateToProps, undefined)(RootWrapper);","/Users/mngos/Documents/MNgoChat3Web/src/FirebaseConfig.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/encryptionConstants.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/Home/HomePageContent.js",["193","194","195"],"/Users/mngos/Documents/MNgoChat3Web/src/components/Home/HomeBottomNav.js",["196","197","198"],"import React from \"react\";\nimport cx from \"classnames\";\n\nimport allChats from \"../../images/allChats.png\";\nimport allUsersIcon from \"../../images/allUsers.png\";\nimport ProfileIcon from \"../../images/profile.png\";\nimport { BOTTOM_NAV_HEIGHT, BOTTOM_NAV_BOTTOM_MARGIN, CHATS_TITLE, USERS_TITLE, PROFILE_TITLE, BOTTOM_BAR_GRADIENT } from \"../../constants\";\n\nexport default function HomeBottomNav({\n    selectedTab,\n    onNavBtnClick,\n}) {\n    return (\n        <div\n            className=\"homeBottomNavContainer\"\n            style={{\n                \"--bottomNavHeight\": BOTTOM_NAV_HEIGHT,\n                \"--bottomNavMarginBottom\": BOTTOM_NAV_BOTTOM_MARGIN,\n                background: BOTTOM_BAR_GRADIENT,\n            }}\n        >\n            <img\n                className={cx(\"bottomTabIcons\", { [\"selectedBottomTabIcon\"]: selectedTab === CHATS_TITLE })}\n                alt=\"allChats\"\n                src={allChats}\n                onClick={() => onNavBtnClick(CHATS_TITLE)}\n            />\n\n            <img\n                className={cx(\"bottomTabIcons\", { [\"selectedBottomTabIcon\"]: selectedTab === USERS_TITLE })}\n                alt=\"allUsers\"\n                src={allUsersIcon}\n                onClick={() => onNavBtnClick(USERS_TITLE)}\n            />\n\n            <img\n                className={cx(\"bottomTabIcons\", { [\"selectedBottomTabIcon\"]: selectedTab === PROFILE_TITLE })}\n                alt=\"profile\"\n                src={ProfileIcon}\n                onClick={() => onNavBtnClick(PROFILE_TITLE)}\n            />\n        </div>\n    )\n}","/Users/mngos/Documents/MNgoChat3Web/src/components/Home/UserListItem.js",["199"],"import React from \"react\";\nimport cx from \"classnames\";\n\nimport userIcon from \"../../images/user.png\";\n\nexport default function HomeBottomNav({\n    userData: {\n        unSeenMsgCount = 0,\n        displayName,\n        username, //in-case of allUsers (USERS_TITLE) username will come but not displayName\n        secondUserToken,\n        userToken,\n    } = {},\n    userToProfileImgMapping = {},\n    onClick,\n    onImageClick,\n}) {\n    const userProfileImg = userToProfileImgMapping[displayName || username];\n\n    function handleOnClick() {\n        onClick({\n            name: displayName || username,\n            token: secondUserToken || userToken,\n            profileImg: userProfileImg,\n        });\n    }\n\n    function handleProfileImgClick(event) {\n        onImageClick(event, userProfileImg);\n    }\n\n    return (\n        <div\n            className={cx(\"listUserItem\", { [\"unSeenMsgUser\"]: unSeenMsgCount > 0 })}\n            onClick={handleOnClick}\n        >\n            <img alt=\"userIcon\" src={userProfileImg || userIcon} onClick={handleProfileImgClick} />\n            <div className=\"listUserItemTitle\">{displayName || username}</div>\n        </div>\n    )\n}","/Users/mngos/Documents/MNgoChat3Web/src/components/Home/HomeProfileTab.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/Chat/ChatPageContent.js",["200","201","202"],"/Users/mngos/Documents/MNgoChat3Web/src/components/Chat/ChatTitleBar.js",[],"/Users/mngos/Documents/MNgoChat3Web/src/components/Chat/ChatMessageItem.js",["203"],"import React, { useRef, useEffect } from 'react';\nimport ReactTextFormat from 'react-text-format';\nimport cx from \"classnames\";\nimport ImageWithLoader from \"../ImageWithLoader\";\nimport { getLoggedUserToken } from \"../../utils\";\nimport { MSG_TYPE_IMAGE, MSG_TYPE_REPLY, MY_MESSAGE_GRADIENT, THEIR_MESSAGE_GRADIENT } from \"../../constants\";\n\nexport default function ChatMessageItem({\n    isSeen,\n    formattedTime,\n    msgIdToScrollTo,\n    msg,\n    onImageClick,\n    onReplyIconClick,\n    onOriginalMsgClick,\n}) {\n    const loggedUserToken = getLoggedUserToken();\n    const msgRef = useRef(null);\n\n    const type = msg.type;\n    const message = msg.message;\n    const originalMessage = msg.originalMessage;\n    const originalMessageType = msg.originalMessageType;\n    const isMineMsg = msg.sentByUserToken === loggedUserToken;\n\n    useEffect(() => {\n        if (msgIdToScrollTo === msg.messageId) {\n            msgRef.current && msgRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' });\n        }\n    }, [msgIdToScrollTo, msg.messageId]);\n\n    function handleMsgItemClick(event) {\n        //double click triggers reply action\n        if (event.detail === 2) {\n            onReplyIconClick(event, msg)\n        }\n    }\n\n    function customLinkDecorator(decoratedHref, decoratedText, linkTarget, key) {\n        return (\n            <a\n                key={key}\n                href={decoratedHref}\n                target=\"_blank\"\n                rel='noreferrer'\n                className='messageItemLink'\n            >\n                {decoratedText}\n            </a>\n        )\n    }\n\n    function customPhoneDecorator(decoratedText, key) {\n        return (\n            <a\n                key={key}\n                href={\"tel:\" + decoratedText}\n                target=\"_blank\"\n                rel='noreferrer'\n                className='messageItemLink'\n            >\n                {decoratedText}\n            </a>\n        )\n    }\n\n    return (\n        <div className=\"messageContainer\" ref={msgRef} onClick={handleMsgItemClick}>\n            <div className={cx(\"messageContent\", { [\"myMessageAlignment\"]: msg.sentByUserToken === loggedUserToken })} >\n                <div\n                    className={\"message\"}\n                    style={\n                        isMineMsg ?\n                            {\n                                background: MY_MESSAGE_GRADIENT,\n                                textAlign: \"right\",\n                            }\n                            :\n                            {\n                                background: THEIR_MESSAGE_GRADIENT,\n                                borderRadius: \"25px\",\n                                borderTopLeftRadius: \"0px\",\n                            }\n                    }\n                >\n                    {\n                        type === MSG_TYPE_REPLY ?\n                            <div className=\"replyMessageItem\" onClick={() => onOriginalMsgClick(msg.originalMessageId)}>\n                                {\n                                    originalMessageType === MSG_TYPE_IMAGE ?\n                                        <ImageWithLoader\n                                            src={originalMessage}\n                                            className=\"messageImg\"\n                                            onClick={(event) => onImageClick(event, originalMessage)}\n                                        />\n                                        : originalMessage\n                                }\n                            </div>\n                            : null\n                    }\n                    {\n                        type === MSG_TYPE_IMAGE ?\n                            <ImageWithLoader\n                                src={message}\n                                className=\"messageImg\"\n                                onClick={(event) => onImageClick(event, message)}\n                            />\n                            :\n                            <ReactTextFormat\n                                allowedFormats={['URL', 'Email', 'Phone']}\n                                linkDecorator={customLinkDecorator}\n                                emailDecorator={customLinkDecorator}\n                                phoneDecorator={customPhoneDecorator}\n                            >\n                                {message}\n                            </ReactTextFormat>\n                    }\n\n                </div>\n            </div>\n            <div className=\"messageTime\">\n                {formattedTime}\n                {isMineMsg && isSeen ? <div className=\"seenText\">seen</div> : null}\n            </div>\n        </div>\n    );\n}","/Users/mngos/Documents/MNgoChat3Web/src/components/Chat/ChatBottomBar.js",["204","205"],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":240,"column":39,"nodeType":"212","messageId":"213","endLine":240,"endColumn":47},{"ruleId":"214","severity":1,"message":"215","line":16,"column":53,"nodeType":"216","messageId":"217","endLine":16,"endColumn":73,"fix":"218"},{"ruleId":"219","severity":1,"message":"220","line":79,"column":24,"nodeType":"221","messageId":"222","endLine":79,"endColumn":25,"suggestions":"223"},{"ruleId":"219","severity":1,"message":"220","line":79,"column":49,"nodeType":"221","messageId":"222","endLine":79,"endColumn":50,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":18,"column":8,"nodeType":"227","endLine":18,"endColumn":13,"suggestions":"228"},{"ruleId":"214","severity":1,"message":"229","line":18,"column":19,"nodeType":"216","messageId":"217","endLine":18,"endColumn":51,"fix":"230"},{"ruleId":"214","severity":1,"message":"231","line":30,"column":31,"nodeType":"216","messageId":"217","endLine":30,"endColumn":58,"fix":"232"},{"ruleId":"225","severity":1,"message":"233","line":37,"column":8,"nodeType":"227","endLine":37,"endColumn":26,"suggestions":"234"},{"ruleId":"225","severity":1,"message":"235","line":30,"column":8,"nodeType":"227","endLine":30,"endColumn":10,"suggestions":"236"},{"ruleId":"225","severity":1,"message":"235","line":46,"column":8,"nodeType":"227","endLine":46,"endColumn":10,"suggestions":"237"},{"ruleId":"225","severity":1,"message":"238","line":55,"column":8,"nodeType":"227","endLine":55,"endColumn":31,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":16,"column":13,"nodeType":"242","endLine":16,"endColumn":87},{"ruleId":"240","severity":1,"message":"241","line":18,"column":13,"nodeType":"242","endLine":18,"endColumn":130},{"ruleId":"240","severity":1,"message":"241","line":23,"column":13,"nodeType":"242","endLine":23,"endColumn":193},{"ruleId":"240","severity":1,"message":"241","line":9,"column":13,"nodeType":"242","endLine":9,"endColumn":64},{"ruleId":"225","severity":1,"message":"235","line":51,"column":8,"nodeType":"227","endLine":51,"endColumn":10,"suggestions":"243"},{"ruleId":"225","severity":1,"message":"244","line":57,"column":8,"nodeType":"227","endLine":57,"endColumn":23,"suggestions":"245"},{"ruleId":"225","severity":1,"message":"246","line":61,"column":8,"nodeType":"227","endLine":61,"endColumn":10,"suggestions":"247"},{"ruleId":"210","severity":1,"message":"248","line":144,"column":74,"nodeType":"212","messageId":"249","endLine":144,"endColumn":82},{"ruleId":"210","severity":1,"message":"211","line":150,"column":65,"nodeType":"250","messageId":"251","endLine":150,"endColumn":72},{"ruleId":"214","severity":1,"message":"252","line":23,"column":51,"nodeType":"216","messageId":"217","endLine":23,"endColumn":105,"fix":"253"},{"ruleId":"214","severity":1,"message":"252","line":30,"column":51,"nodeType":"216","messageId":"217","endLine":30,"endColumn":105,"fix":"254"},{"ruleId":"214","severity":1,"message":"252","line":37,"column":51,"nodeType":"216","messageId":"217","endLine":37,"endColumn":107,"fix":"255"},{"ruleId":"214","severity":1,"message":"256","line":34,"column":45,"nodeType":"216","messageId":"217","endLine":34,"endColumn":82,"fix":"257"},{"ruleId":"225","severity":1,"message":"258","line":85,"column":8,"nodeType":"227","endLine":85,"endColumn":10,"suggestions":"259"},{"ruleId":"225","severity":1,"message":"260","line":98,"column":8,"nodeType":"227","endLine":98,"endColumn":23,"suggestions":"261"},{"ruleId":"210","severity":1,"message":"211","line":149,"column":42,"nodeType":"250","messageId":"251","endLine":149,"endColumn":49},{"ruleId":"214","severity":1,"message":"262","line":69,"column":52,"nodeType":"216","messageId":"217","endLine":69,"endColumn":115,"fix":"263"},{"ruleId":"240","severity":1,"message":"241","line":121,"column":41,"nodeType":"242","endLine":121,"endColumn":134},{"ruleId":"240","severity":1,"message":"241","line":137,"column":49,"nodeType":"242","endLine":137,"endColumn":145},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","no-useless-computed-key","Unnecessarily computed property [\"darkLoader\"] found.","Property","unnecessarilyComputedProperty",{"range":"266","text":"267"},"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["268","269"],["270","271"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'duration' and 'handleClose'. Either include them or remove the dependency array. If 'handleClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["272"],"Unnecessarily computed property [\"darkActionBtnContainer\"] found.",{"range":"273","text":"274"},"Unnecessarily computed property [\"darkActionBtnText\"] found.",{"range":"275","text":"276"},"React Hook useEffect has a missing dependency: 'btnClicked'. Either include it or remove the dependency array.",["277"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["278"],["279"],"React Hook useEffect has missing dependencies: 'chatRoomId' and 'selectedUserDetails'. Either include them or remove the dependency array.",["280"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["281"],"React Hook useEffect has missing dependencies: 'snackBarMsg' and 'snackBarType'. Either include them or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["283"],"Array.prototype.map() expects a value to be returned at the end of function.","expectedAtEnd","ReturnStatement","expectedReturnValue","Unnecessarily computed property [\"selectedBottomTabIcon\"] found.",{"range":"284","text":"285"},{"range":"286","text":"285"},{"range":"287","text":"285"},"Unnecessarily computed property [\"unSeenMsgUser\"] found.",{"range":"288","text":"289"},"React Hook useEffect has missing dependencies: 'chatRoomId', 'dispatch', and 'selectedUserToken'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["290"],"React Hook useEffect has a missing dependency: 'chatRoomId'. Either include it or remove the dependency array.",["291"],"Unnecessarily computed property [\"myMessageAlignment\"] found.",{"range":"292","text":"293"},"no-global-assign","no-unsafe-negation",[372,386],"\"darkLoader\"",{"messageId":"294","fix":"295","desc":"296"},{"messageId":"297","fix":"298","desc":"299"},{"messageId":"294","fix":"300","desc":"296"},{"messageId":"297","fix":"301","desc":"299"},{"desc":"302","fix":"303"},[365,391],"\"darkActionBtnContainer\"",[782,803],"\"darkActionBtnText\"",{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"306","fix":"308"},{"desc":"309","fix":"310"},{"desc":"306","fix":"311"},{"desc":"312","fix":"313"},{"desc":"306","fix":"314"},[796,821],"\"selectedBottomTabIcon\"",[1059,1084],[1326,1351],[872,889],"\"unSeenMsgUser\"",{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},[2091,2113],"\"myMessageAlignment\"","removeEscape",{"range":"319","text":"320"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"321","text":"322"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"323","text":"320"},{"range":"324","text":"322"},"Update the dependencies array to be: [duration, handleClose, msg]",{"range":"325","text":"326"},"Update the dependencies array to be: [btnClicked, isUserRegistered]",{"range":"327","text":"328"},"Update the dependencies array to be: [dispatch]",{"range":"329","text":"330"},{"range":"331","text":"330"},"Update the dependencies array to be: [chatRoomId, isANewChatRoomStarted, selectedUserDetails]",{"range":"332","text":"333"},{"range":"334","text":"330"},"Update the dependencies array to be: [snackBarCount, snackBarMsg, snackBarType]",{"range":"335","text":"336"},{"range":"337","text":"330"},"Update the dependencies array to be: [chatRoomId, dispatch, selectedUserToken]",{"range":"338","text":"339"},"Update the dependencies array to be: [chatRoomId, isANewMessage]",{"range":"340","text":"341"},[1942,1943],"",[1942,1942],"\\",[1967,1968],[1967,1967],[388,393],"[duration, handleClose, msg]",[1166,1184],"[btnClicked, isUserRegistered]",[1180,1182],"[dispatch]",[1712,1714],[1996,2019],"[chatRoomId, isANewChatRoomStarted, selectedUserDetails]",[1365,1367],[1490,1505],"[snackBarCount, snackBarMsg, snackBarType]",[1962,1964],[3485,3487],"[chatRoomId, dispatch, selectedUserToken]",[3993,4008],"[chatRoomId, isANewMessage]"]